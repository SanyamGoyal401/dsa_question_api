[
  {
    "id": 1,
    "Topic": "Array",
    "Problem": "Reverse the array",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/write-a-program-to-reverse-an-array-or-string/",
    "Difficulty": "Easy",
    "Description": "The problem is to write a program to reverse an array or string. Given an array or string of characters, the task is to reverse it in-place, without using any additional memory or data structure.The goal is to modify the input array or string in such a way that the elements or characters are reversed.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 2,
    "Topic": "Array",
    "Problem": "Find the maximum and minimum element in an array",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/maximum-and-minimum-in-an-array/",
    "Difficulty": "Easy",
    "Description": "The problem is to find the maximum and minimum element in an array. Given an array of integers, the task is to find the maximum and minimum element in the array. The goal is to output the maximum and minimum element from the given array.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 3,
    "Topic": "Array",
    "Problem": "Find the Kth max and min element of an array ",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/kth-smallest-element/0",
    "Difficulty": "Medium",
    "Description": "Kth Smallest Element Given an array of integers and an integer k, find the kth smallest element in the array.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 4,
    "Topic": "Array",
    "Problem": "Given an array which consists of only 0, 1 and 2. Sort the array without using any sorting algo",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/sort-an-array-of-0s-1s-and-2s/0",
    "Difficulty": "Easy",
    "Description": "Sort an Array of 0s, 1s, and 2s Given an array of integers containing only 0s, 1s, and 2s, sort the array in ascending order.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 5,
    "Topic": "Array",
    "Problem": "Move all the negative elements to one side of the array ",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/move-negative-numbers-beginning-positive-end-constant-extra-space/",
    "Difficulty": "Medium",
    "Description": "Move Negative Numbers to Beginning and Positive Numbers to End (Constant Extra Space) Given an array of integers, move all the negative numbers to the beginning of the array and all the positive numbers to the end of the array, without using any additional space.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 6,
    "Topic": "Array",
    "Problem": "Find the Union and Intersection of the two sorted arrays.",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/union-of-two-arrays/0",
    "Difficulty": "Easy",
    "Description": "Union of Two Arrays Given two arrays of integers, find their union, which is the set of all distinct elements from both arrays, in sorted order.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 7,
    "Topic": "Array",
    "Problem": "Write a program to cyclically rotate an array by one.",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/cyclically-rotate-an-array-by-one/0",
    "Difficulty": "Easy",
    "Description": "Cyclically Rotate an Array by One Given an array of integers, cyclically rotate the array by one position to the right.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 8,
    "Topic": "Array",
    "Problem": "find Largest sum contiguous Subarray [V. IMP]",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/kadanes-algorithm/0",
    "Difficulty": "Medium",
    "Description": "Kadane's Algorithm Given an array of integers, find the maximum sum of any contiguous subarray in the array.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 9,
    "Topic": "Array",
    "Problem": "Minimise the maximum difference between heights [V.IMP]",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/minimize-the-heights3351/1",
    "Difficulty": "Medium",
    "Description": "Minimize the Heights: Given an array of heights of towers and a positive integer k, minimize the maximum difference between the heights of any two towers by either increasing or decreasing the height of each tower by at most k.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 10,
    "Topic": "Array",
    "Problem": "Minimum no. of Jumps to reach end of an array",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/minimum-number-of-jumps/0",
    "Difficulty": "Medium",
    "Description": "Minimum Number of Jumps Given an array of integers where each element represents the maximum number of steps that can be jumped going forward from that element, find the minimum number of jumps required to reach the end of the array.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 11,
    "Topic": "Array",
    "Problem": "find duplicate in an array of N+1 Integers",
    "Done": false,
    "URL": "https://leetcode.com/problems/find-the-duplicate-number/",
    "Difficulty": "Medium",
    "Description": "Find the Duplicate Number Given an array of integers with the constraint that each element in the array is between 1 and n (inclusive), where n is the size of the array, find the duplicate number in the array.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 12,
    "Topic": "Array",
    "Problem": "Merge 2 sorted arrays without using Extra space.",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/merge-two-sorted-arrays5135/1",
    "Difficulty": "Medium",
    "Description": "Merge Two Sorted Arrays: Given two sorted arrays of integers, merge them into a single sorted array without using any additional space.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 13,
    "Topic": "Array",
    "Problem": "Kadane's Algo [V.V.V.V.V IMP]",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/kadanes-algorithm/0",
    "Difficulty": "Medium",
    "Description": "Kadane's Algorithm: This problem involves finding the maximum sum of a subarray within a given array of integers.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 14,
    "Topic": "Array",
    "Problem": "Merge Intervals",
    "Done": false,
    "URL": "https://leetcode.com/problems/merge-intervals/",
    "Difficulty": "Medium",
    "Description": "Merge Intervals: Given a list of intervals, this problem requires merging overlapping intervals to create a new list of non-overlapping intervals.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 15,
    "Topic": "Array",
    "Problem": "Next Permutation",
    "Done": false,
    "URL": "https://leetcode.com/problems/next-permutation/",
    "Difficulty": "Medium",
    "Description": "Next Permutation: Given an array of integers, this problem involves finding the lexicographically next permutation of the array.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 16,
    "Topic": "Array",
    "Problem": "Count Inversion",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/inversion-of-array/0",
    "Difficulty": "Medium",
    "Description": "Inversion of Array: This problem involves finding the count of inversions in an array, where an inversion is defined as a pair of elements such that the first element is greater than the second element and they appear in reverse order in the array.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 17,
    "Topic": "Array",
    "Problem": "Best time to buy and Sell stock",
    "Done": false,
    "URL": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock/",
    "Difficulty": "Easy",
    "Description": "Best Time to Buy and Sell Stock: This problem involves finding the maximum profit that can be obtained by buying and selling a stock with certain constraints, such as only being able to hold one stock at a time.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 18,
    "Topic": "Array",
    "Problem": "find all pairs on integer array whose sum is equal to given number",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/count-pairs-with-given-sum5022/1",
    "Difficulty": "Easy",
    "Description": "Count Pairs with Given Sum: Given an array of integers and a target sum, this problem requires finding the count of pairs in the array whose sum is equal to the target sum.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 19,
    "Topic": "Array",
    "Problem": "find common elements In 3 sorted arrays",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/common-elements1132/1",
    "Difficulty": "Easy",
    "Description": "Common Elements: Given two arrays, this problem involves finding their common elements and returning them in sorted order.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 20,
    "Topic": "Array",
    "Problem": "Rearrange the array in alternating positive and negative items with O(1) extra space",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/rearrange-array-alternating-positive-negative-items-o1-extra-space/",
    "Difficulty": "Medium",
    "Description": "Rearrange Array Alternating Positive Negative Items: This problem involves rearranging an array of integers such that positive and negative numbers alternate, with positive numbers appearing first.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 21,
    "Topic": "Array",
    "Problem": "Find if there is any subarray with sum equal to 0",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/subarray-with-0-sum/0",
    "Difficulty": "Easy",
    "Description": "Subarray with 0 Sum: Given an array of integers, this problem requires finding if there exists a subarray with a sum of 0.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 22,
    "Topic": "Array",
    "Problem": "Find factorial of a large number",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/factorials-of-large-numbers/0",
    "Difficulty": "Medium",
    "Description": "Factorials of Large Numbers: This problem involves finding the factorial of a large number and storing the result in an array or list.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 23,
    "Topic": "Array",
    "Problem": "find maximum product subarray ",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/maximum-product-subarray3604/1",
    "Difficulty": "Medium",
    "Description": "Maximum Product Subarray: Given an array of integers, this problem involves finding the contiguous subarray with the maximum product.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 24,
    "Topic": "Array",
    "Problem": "Find longest coinsecutive subsequence",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/longest-consecutive-subsequence/0",
    "Difficulty": "Medium",
    "Description": "Longest Consecutive Subsequence: Given an array of integers, this problem requires finding the length of the longest consecutive subsequence of integers.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 25,
    "Topic": "Array",
    "Problem": "Given an array of size n and a number k, fin all elements that appear more than  n/k  times.",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/given-an-array-of-of-size-n-finds-all-the-elements-that-appear-more-than-nk-times/",
    "Difficulty": "Easy",
    "Description": "Elements that Appear More than N/K Times: Given an array of integers, this problem involves finding all elements that appear more than N/K times, where N is the size of the array and K is a given integer.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 26,
    "Topic": "Array",
    "Problem": "Maximum profit by buying and selling a share atmost twice",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/maximum-profit-by-buying-and-selling-a-share-at-most-twice/",
    "Difficulty": "Medium",
    "Description": "Maximum Profit by Buying and Selling a Share at Most Twice: Given an array of stock prices, this problem requires finding the maximum profit that can be obtained by buying and selling a stock at most twice, with the constraint that a stock cannot be bought and sold on the same day.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 27,
    "Topic": "Array",
    "Problem": "Find whether an array is a subset of another array",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/array-subset-of-another-array/0",
    "Difficulty": "Easy",
    "Description": "Array Subset of Another Array: Given two arrays, this problem involves determining if one array is a subset of another array.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 28,
    "Topic": "Array",
    "Problem": "Find the triplet that sum to a given value",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/triplet-sum-in-array/0",
    "Difficulty": "Medium",
    "Description": "Triplet Sum in Array: Given an array of integers, this problem requires finding if there exists a triplet of elements in the array whose sum is equal to a given target sum.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 29,
    "Topic": "Array",
    "Problem": "Trapping Rain water problem",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/trapping-rain-water/0",
    "Difficulty": "Medium",
    "Description": "Trapping Rain Water: Given an array representing the heights of bars, this problem involves finding the total amount of rainwater that can be trapped between the bars.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 30,
    "Topic": "Array",
    "Problem": "Chocolate Distribution problem",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/chocolate-distribution-problem/0",
    "Difficulty": "Easy",
    "Description": "Chocolate Distribution Problem: Given an array of integers representing the number of chocolates in each packet, and the number of students, this problem requires finding the minimum difference between the maximum and minimum number of chocolates that can be distributed among the students.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 31,
    "Topic": "Array",
    "Problem": "Smallest Subarray with sum greater than a given value",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/smallest-subarray-with-sum-greater-than-x/0",
    "Difficulty": "Easy",
    "Description": "Smallest Subarray with Sum Greater than X: Given an array of integers and a target sum, this problem requires finding the length of the smallest subarray with a sum greater than the target sum.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 32,
    "Topic": "Array",
    "Problem": "Three way partitioning of an array around a given value",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/three-way-partitioning/1",
    "Difficulty": "Easy",
    "Description": "Three-Way Partitioning: Given an array of integers and two values, this problem involves rearranging the array such that all elements less than the first value come first, followed by all elements equal to the first value, and finally all elements greater than the first value.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 33,
    "Topic": "Array",
    "Problem": "Minimum swaps required bring elements less equal K together",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/minimum-swaps-required-to-bring-all-elements-less-than-or-equal-to-k-together/0",
    "Difficulty": "Medium",
    "Description": "Minimum Swaps required to Bring all Elements less than or equal to k Together: Given an array of integers and a target value, this problem",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 34,
    "Topic": "Array",
    "Problem": "Minimum no. of operations required to make an array palindrome",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/palindromic-array/0",
    "Difficulty": "Easy",
    "Description": "Palindromic Array: Given an array of integers, determine if it is a palindromic array or not.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 35,
    "Topic": "Array",
    "Problem": "Median of 2 sorted arrays of equal size",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/find-the-median0527/1",
    "Difficulty": "Easy",
    "Description": "Find the Median: Given two sorted arrays, find the median element.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 36,
    "Topic": "Array",
    "Problem": "Median of 2 sorted arrays of different size",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/median-of-two-sorted-arrays-of-different-sizes/",
    "Difficulty": "Hard",
    "Description": "Median of Two Sorted Arrays of Different Sizes: Given two sorted arrays of different sizes, find the median element.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 37,
    "Topic": "BackTracking",
    "Problem": "Rat in a maze ",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/rat-in-a-maze-problem/1",
    "Difficulty": "Medium",
    "Description": "Rat in a Maze Problem: Given a maze represented as a binary matrix, find a path for a rat to reach the destination.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 38,
    "Topic": "BackTracking",
    "Problem": "Printing all solutions in N-Queen ",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/printing-solutions-n-queen-problem/",
    "Difficulty": "Hard",
    "Description": "Printing Solutions to N-Queen Problem: Given a chessboard of size N x N, find all possible solutions to place N queens on the board such that no two queens threaten each other.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 39,
    "Topic": "BackTracking",
    "Problem": "Word Break using Backtracking",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/word-break-part-2/0",
    "Difficulty": "Hard",
    "Description": "Word Break Part 2: Given a string and a dictionary of words, find all possible ways to break the string into words.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 40,
    "Topic": "BackTracking",
    "Problem": "Remove Invalid Parentheses",
    "Done": false,
    "URL": "https://leetcode.com/problems/remove-invalid-parentheses/",
    "Difficulty": "Hard",
    "Description": "Remove Invalid Parentheses: Given a string containing parentheses, remove the minimum number of invalid parentheses to make the string valid.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 41,
    "Topic": "BackTracking",
    "Problem": "Sudoku Solver",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/solve-the-sudoku/0",
    "Difficulty": "Hard",
    "Description": "Solve the Sudoku: Given an incomplete Sudoku board, fill in the missing numbers to complete the board.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 42,
    "Topic": "BackTracking",
    "Problem": "m Coloring ",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/m-coloring-problem/0",
    "Difficulty": "Medium",
    "Description": "M Coloring Problem: Given an undirected graph and an integer M, find a way to color the graph using at most M colors such that no two adjacent vertices have the same color.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 43,
    "Topic": "BackTracking",
    "Problem": "Print all palindromic partitions of a string",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/given-a-string-print-all-possible-palindromic-partition/",
    "Difficulty": "Hard",
    "Description": "Given a String, Print all Possible Palindromic Partitions: Given a string, find all possible partitions of the string into palindromic substrings.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 44,
    "Topic": "BackTracking",
    "Problem": "Subset Sum ",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/subset-sum-problem2014/1",
    "Difficulty": "Medium",
    "Description": "Subset Sum Problem: Given an array of integers and a target sum, find if there exists a subset of the array that adds up to the target sum.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 45,
    "Topic": "BackTracking",
    "Problem": "The Knight’s tour problem",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/the-knights-tour-problem-backtracking-1/",
    "Difficulty": "Hard",
    "Description": "The Knight's Tour Problem: Given a chessboard and a knight, find a sequence of moves for the knight to visit all cells of the board exactly once.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 46,
    "Topic": "BackTracking",
    "Problem": "Tug of War",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/tug-of-war/",
    "Difficulty": "Hard",
    "Description": "Tug of War: Given an array of integers, divide the array into two subsets such that the difference between the sum of the subsets is minimized.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 47,
    "Topic": "BackTracking",
    "Problem": "Find shortest safe route in a path with landmines",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/find-shortest-safe-route-in-a-path-with-landmines/",
    "Difficulty": "Hard",
    "Description": "Find Shortest Safe Route in a Path with Landmines: Given a 2D matrix representing a path with landmines, find the shortest safe route from the top-left corner to the bottom-right corner.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 48,
    "Topic": "BackTracking",
    "Problem": "Combinational Sum",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/combination-sum/0",
    "Difficulty": "Medium",
    "Description": "Combination Sum: Given an array of integers and a target sum, find all unique combinations of the array elements that add up to the target sum.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 49,
    "Topic": "BackTracking",
    "Problem": "Find Maximum number possible by doing at-most K swaps",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/largest-number-in-k-swaps/0",
    "Difficulty": "Medium",
    "Description": "Largest Number in K Swaps: Given a number represented as a string and an integer K, find the largest number that can be formed by swapping at most K digits.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 50,
    "Topic": "BackTracking",
    "Problem": "Print all permutations of a string ",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/permutations-of-a-given-string/0",
    "Difficulty": "Medium",
    "Description": "Permutations of a Given String: Given a string, find all possible permutations of the string.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 51,
    "Topic": "BackTracking",
    "Problem": "Find if there is a path of more than k length from a source",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/find-if-there-is-a-path-of-more-than-k-length-from-a-source/",
    "Difficulty": "Medium",
    "Description": "Find if there is a Path of More Than K Length from a Source: Given a weighted directed graph and a source vertex, find if there exists a path from the source to any other vertex with a weight greater than K.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 52,
    "Topic": "BackTracking",
    "Problem": "Longest Possible Route in a Matrix with Hurdles",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/longest-possible-route-in-a-matrix-with-hurdles/",
    "Difficulty": "Medium",
    "Description": "Longest Possible Route in a Matrix with Hurdles: Given a matrix representing a path with hurdles, find the longest possible route from the top-left corner to the bottom-right corner.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 53,
    "Topic": "BackTracking",
    "Problem": "Print all possible paths from top left to bottom right of a mXn matrix",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/print-all-possible-paths-from-top-left-to-bottom-right-of-a-mxn-matrix/",
    "Difficulty": "Medium",
    "Description": "Print All Possible Paths from Top Left to Bottom Right of a MxN Matrix: Given a matrix of size MxN, find all possible paths from the top-left corner to the bottom-right corner.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 54,
    "Topic": "BackTracking",
    "Problem": "Partition of a set intoK subsets with equal sum",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/partition-array-to-k-subsets/1",
    "Difficulty": "Hard",
    "Description": "Partition Array to K Subsets: Given an array of integers, divide the array into K non-empty subsets such that the sum of each subset is the same.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 55,
    "Topic": "BackTracking",
    "Problem": "Find the K-th Permutation Sequence of first N natural numbers",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/find-the-k-th-permutation-sequence-of-first-n-natural-numbers/",
    "Difficulty": "Hard",
    "Description": "Find the K-th Permutation Sequence of First N Natural Numbers: Given two integers N and K, find the K-th permutation sequence of the first N natural numbers.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 56,
    "Topic": "Stacks & Queues",
    "Problem": " Implement Stack from Scratch",
    "Done": false,
    "URL": "https://www.tutorialspoint.com/javaexamples/data_stack.htm",
    "Difficulty": "Easy",
    "Description": "NOT FOUND",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 57,
    "Topic": "Stacks & Queues",
    "Problem": " Implement Queue from Scratch",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/queue-set-1introduction-and-array-implementation/",
    "Difficulty": "Easy",
    "Description": "NOT FOUND",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 58,
    "Topic": "Stacks & Queues",
    "Problem": "Implement 2 stack in an array",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/implement-two-stacks-in-an-array/1",
    "Difficulty": "Easy",
    "Description": "Implement Two Stacks in an Array: Implement two stacks in a single array and perform stack operations on them.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 59,
    "Topic": "Binary Trees",
    "Problem": "level order traversal",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/level-order-traversal/1",
    "Difficulty": "Easy",
    "Description": "Level Order Traversal: Given a binary tree, perform a level order traversal of the tree.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 60,
    "Topic": "Binary Trees",
    "Problem": "Reverse Level Order traversal",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/reverse-level-order-traversal/1",
    "Difficulty": "Easy",
    "Description": "Reverse Level Order Traversal: Given a binary tree, write a function to print its nodes in reverse level order (i.e., from bottom to top).",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 61,
    "Topic": "Binary Trees",
    "Problem": "Height of a tree",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/height-of-binary-tree/1",
    "Difficulty": "Easy",
    "Description": "Height of Binary Tree: Given a binary tree, write a function to find its height, which is the number of nodes along the longest path from the root node to any leaf node.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 62,
    "Topic": "Binary Trees",
    "Problem": "Diameter of a tree",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/diameter-of-binary-tree/1",
    "Difficulty": "Medium",
    "Description": "Diameter of Binary Tree: Given a binary tree, write a function to find its diameter, which is the length of the longest path between any two nodes in the tree.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 63,
    "Topic": "Binary Trees",
    "Problem": "Mirror of a tree",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/create-a-mirror-tree-from-the-given-binary-tree/",
    "Difficulty": "Easy",
    "Description": "Create a Mirror Tree from the Given Binary Tree: Given a binary tree, write a function to create a mirror image of the tree by swapping left and right child nodes at each level.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 64,
    "Topic": "Binary Trees",
    "Problem": "Inorder Traversal of a tree both using recursion and Iteration",
    "Done": false,
    "URL": "https://www.techiedelight.com/inorder-tree-traversal-iterative-recursive/",
    "Difficulty": "Easy",
    "Description": "Inorder Tree Traversal (Iterative and Recursive): Given a binary tree, write functions to perform its inorder traversal using both iterative and recursive approaches.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 65,
    "Topic": "Binary Trees",
    "Problem": "Preorder Traversal of a tree both using recursion and Iteration",
    "Done": false,
    "URL": "https://www.techiedelight.com/preorder-tree-traversal-iterative-recursive/",
    "Difficulty": "Easy",
    "Description": "Preorder Tree Traversal (Iterative and Recursive): Given a binary tree, write functions to perform its preorder traversal using both iterative and recursive approaches.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 66,
    "Topic": "Binary Trees",
    "Problem": "Postorder Traversal of a tree both using recursion and Iteration",
    "Done": false,
    "URL": "https://www.techiedelight.com/postorder-tree-traversal-iterative-recursive/",
    "Difficulty": "Easy",
    "Description": "Postorder Tree Traversal (Iterative and Recursive): Given a binary tree, write functions to perform its postorder traversal using both iterative and recursive approaches.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 67,
    "Topic": "Binary Trees",
    "Problem": "Left View of a tree",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/left-view-of-binary-tree/1",
    "Difficulty": "Easy",
    "Description": "Left View of Binary Tree, Right View of Binary Tree, Top View of Binary Tree, Bottom View of Binary Tree, Zigzag Tree Traversal, Check for Balanced Tree, Diagonal Traversal of Binary Tree, Boundary Traversal of Binary Tree, Construct Binary Tree from String Bracket Representation, Binary Tree to Doubly Linked List, Transform to Sum Tree, Construct Tree, Minimum Swap required to Convert Binary Tree to Binary Search Tree: These are various problems related to binary trees, including different types of traversals, views, boundary traversal, and tree transformations.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 68,
    "Topic": "Binary Trees",
    "Problem": "Right View of Tree",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/right-view-of-binary-tree/1",
    "Difficulty": "Easy",
    "Description": "Right View of Binary Tree: Given a binary tree, the task is to print the right view of the tree, which consists of all the nodes visible when viewed from the right side of the tree.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 69,
    "Topic": "Binary Trees",
    "Problem": "Top View of a tree",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/top-view-of-binary-tree/1",
    "Difficulty": "Medium",
    "Description": "Top View of Binary Tree: Given a binary tree, the task is to print the top view of the tree, which consists of all the nodes visible when viewed from the top of the tree.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 70,
    "Topic": "Binary Trees",
    "Problem": "Bottom View of a tree",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/bottom-view-of-binary-tree/1",
    "Difficulty": "Medium",
    "Description": "Bottom View of Binary Tree: Given a binary tree, the task is to print the bottom view of the tree, which consists of all the nodes visible when viewed from the bottom of the tree.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 71,
    "Topic": "Binary Trees",
    "Problem": "Zig-Zag traversal of a binary tree",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/zigzag-tree-traversal/1",
    "Difficulty": "Easy",
    "Description": "Zigzag Tree Traversal: Given a binary tree, the task is to print the tree's nodes in a zigzag pattern, i.e., nodes at even levels are printed from left to right, and nodes at odd levels are printed from right to left.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 72,
    "Topic": "Binary Trees",
    "Problem": "Check if a tree is balanced or not",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/check-for-balanced-tree/1",
    "Difficulty": "Easy",
    "Description": "Check for Balanced Tree: Given a binary tree, the task is to check if it is balanced, i.e., the height of the left and right subtrees of every node differ by at most 1.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 73,
    "Topic": "Binary Trees",
    "Problem": "Diagnol Traversal of a Binary tree",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/diagonal-traversal-of-binary-tree/",
    "Difficulty": "Medium",
    "Description": "Diagonal Traversal of Binary Tree: Given a binary tree, the task is to print its nodes in diagonal order, i.e., nodes having the same slope are printed together.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 74,
    "Topic": "Binary Trees",
    "Problem": "Boundary traversal of a Binary tree",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/boundary-traversal-of-binary-tree/1",
    "Difficulty": "Medium",
    "Description": "Boundary Traversal of Binary Tree: Given a binary tree, the task is to print its boundary nodes in an anti-clockwise direction, starting from the root.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 75,
    "Topic": "Binary Trees",
    "Problem": "Construct Binary Tree from String with Bracket Representation",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/construct-binary-tree-string-bracket-representation/",
    "Difficulty": "Medium",
    "Description": "Construct Binary Tree from String Bracket Representation: Given a string representing a binary tree in bracket representation, the task is to construct the binary tree from the given string.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 76,
    "Topic": "Binary Trees",
    "Problem": "Convert Binary tree into Doubly Linked List",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/binary-tree-to-dll/1",
    "Difficulty": "Hard",
    "Description": "Binary Tree to DLL: Given a binary tree, the task is to convert it to a doubly linked list (DLL) where the left pointer of the node points to the previous node in inorder traversal and the right pointer points to the next node in inorder traversal.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 77,
    "Topic": "Binary Trees",
    "Problem": "Convert Binary tree into Sum tree",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/transform-to-sum-tree/1",
    "Difficulty": "Easy",
    "Description": "Transform to Sum Tree: Given a binary tree, the task is to transform it into a sum tree, where the value of a node is updated to the sum of all the nodes in its subtree, including itself.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 78,
    "Topic": "Binary Trees",
    "Problem": "Construct Binary tree from Inorder and preorder traversal",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/construct-tree-1/1",
    "Difficulty": "Medium",
    "Description": "Construct Tree from Preorder and Inorder: Given the preorder and inorder traversals of a binary tree, the task is to construct the binary tree from these traversals.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 79,
    "Topic": "Binary Trees",
    "Problem": "Find minimum swaps required to convert a Binary tree into BST",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/minimum-swap-required-convert-binary-tree-binary-search-tree/",
    "Difficulty": "Hard",
    "Description": "Minimum Swap Required to Convert Binary Tree to Binary Search Tree: Given a binary tree, the task is to find the minimum number of swaps required to convert it into a binary search tree (BST).",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 80,
    "Topic": "Binary Trees",
    "Problem": "Check if Binary tree is Sum tree or not",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/sum-tree/1",
    "Difficulty": "Medium",
    "Description": "Sum Tree: Given a binary tree, the task is to check if it is a Sum Tree or not. A Sum Tree is a binary tree in which the value of each node is the sum of the values of its left and right child, and an empty tree is also considered as a Sum Tree.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 81,
    "Topic": "Binary Trees",
    "Problem": "Check if all leaf nodes are at same level or not",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/leaf-at-same-level/1",
    "Difficulty": "Easy",
    "Description": "Leaf at Same Level: Given a binary tree, the task is to check if all the leaf nodes are at the same level or not. If all the leaf nodes are at the same level, return true, otherwise return false.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 82,
    "Topic": "Binary Trees",
    "Problem": "Check if a Binary Tree contains duplicate subtrees of size 2 or more [ IMP ]",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/duplicate-subtree-in-binary-tree/1",
    "Difficulty": "Medium",
    "Description": "Duplicate Subtree in Binary Tree: Given a binary tree, the task is to check if there is any duplicate subtree in the tree. A duplicate subtree is a subtree that has the same structure and same node values as another subtree in the tree.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 83,
    "Topic": "Binary Trees",
    "Problem": "Check if 2 trees are mirror or not",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/check-mirror-in-n-ary-tree/0",
    "Difficulty": "Medium",
    "Description": "Check Mirror in N-ary Tree: Given two N-ary trees, the task is to check if they are mirrors of each other. Two trees are considered as mirrors of each other if one tree is the mirror image of the other tree, i.e., the trees are symmetric about their root.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 84,
    "Topic": "Binary Trees",
    "Problem": "Sum of Nodes on the Longest path from root to leaf node ",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/sum-of-the-longest-bloodline-of-a-tree/1",
    "Difficulty": "Easy",
    "Description": "Sum of the Longest Bloodline of a Tree: Given a binary tree, the task is to find the sum of the longest path from the root to a leaf node. If there are multiple paths with the same length, consider the one with the maximum sum.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 85,
    "Topic": "Binary Trees",
    "Problem": "Check if given graph is tree or not.  [ IMP ]",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/check-given-graph-tree/",
    "Difficulty": "Medium",
    "Description": "Check Given Graph is Tree or not\": Given an undirected graph, the task is to check if it is a tree or not. A tree is an undirected graph in which there is exactly one path between any two nodes and there are no cycles.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 86,
    "Topic": "Binary Trees",
    "Problem": "Find Largest subtree sum in a tree",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/find-largest-subtree-sum-tree/",
    "Difficulty": "Easy",
    "Description": "Find Largest Subtree Sum in a Tree: Given a binary tree, the task is to find the subtree with the largest sum of its nodes. Return the sum of nodes of the largest subtree.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 87,
    "Topic": "Binary Trees",
    "Problem": "Maximum Sum of nodes in Binary tree such that no two are adjacent ",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/maximum-sum-nodes-binary-tree-no-two-adjacent/",
    "Difficulty": "Hard",
    "Description": "Maximum Sum of Nodes in Binary Tree with No Two Adjacent Nodes: Given a binary tree where each node has an integer value, the task is to find the maximum sum of nodes in the tree such that no two adjacent nodes are included in the sum.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 88,
    "Topic": "Binary Trees",
    "Problem": "Print all K Sum paths in a Binary tree",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/print-k-sum-paths-binary-tree/",
    "Difficulty": "Hard",
    "Description": "Print K Sum Paths in Binary Tree: Given a binary tree and an integer K, the task is to print all the paths in the tree that have a sum equal to K.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 89,
    "Topic": "Binary Trees",
    "Problem": "Find LCA in a Binary tree",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/lowest-common-ancestor-in-a-binary-tree/1",
    "Difficulty": "Medium",
    "Description": "Lowest Common Ancestor in a Binary Tree: Given a binary tree and two nodes, the task is to find the lowest common ancestor (LCA) of the two given nodes. LCA is the lowest node in the tree that has both the given nodes as its descendants.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 90,
    "Topic": "Binary Trees",
    "Problem": "Find distance between 2 nodes in a Binary tree",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/min-distance-between-two-given-nodes-of-a-binary-tree/1",
    "Difficulty": "Medium",
    "Description": "Minimum Distance Between Two Given Nodes of a Binary Tree: Given a binary tree and two nodes, the task is to find the minimum distance between the two given nodes in the tree.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 91,
    "Topic": "Binary Trees",
    "Problem": "Kth Ancestor of node in a Binary tree",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/kth-ancestor-node-binary-tree-set-2/",
    "Difficulty": "Medium",
    "Description": "Kth Ancestor Node in a Binary Tree: Given a binary tree and a node value, the task is to find the Kth ancestor of the given node in the tree. Kth ancestor is the node which is at a distance K from the given node towards the root.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 92,
    "Topic": "Binary Trees",
    "Problem": "Find all Duplicate subtrees in a Binary tree [ IMP ]",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/duplicate-subtrees/1",
    "Difficulty": "Medium",
    "Description": "Duplicate Subtrees: Given a binary tree, the task is to find all the duplicate subtrees in the tree. A subtree is considered as duplicate if it has the same structure and same node values as another subtree in the tree.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 93,
    "Topic": "Binary Trees",
    "Problem": "Tree Isomorphism",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/check-if-tree-is-isomorphic/1",
    "Difficulty": "Easy",
    "Description": "Check if Tree is Isomorphic: Given two binary trees, the task is to check if they are isomorphic to each other. Two trees are considered isomorphic if they have the same structure but may have different node values.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 94,
    "Topic": "Bit Manipulation",
    "Problem": "Count set bits in an integer",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/set-bits0143/1",
    "Difficulty": "Easy",
    "Description": "Set Bits: Given an integer, the task is to count the number of set bits (bits with value 1) in the binary representation of the integer.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 95,
    "Topic": "Bit Manipulation",
    "Problem": "Find the two non-repeating elements in an array of repeating elements",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/finding-the-numbers0215/1",
    "Difficulty": "Medium",
    "Description": "Finding the Numbers: Given an array of integers, where all numbers except for two numbers occur twice, the task is to find the two numbers that occur only once in the array.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 96,
    "Topic": "Bit Manipulation",
    "Problem": "Count number of bits to be flipped to convert A to B",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/bit-difference/0",
    "Difficulty": "Easy",
    "Description": "Bit Difference: Given two integers, the task is to find the number of bits that are different in their binary representation.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 97,
    "Topic": "Bit Manipulation",
    "Problem": "Count total set bits in all numbers from 1 to n",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/count-total-set-bits/0",
    "Difficulty": "Medium",
    "Description": "Count Total Set Bits: Given an integer, the task is to count the total number of set bits (bits with value 1) in the binary representation of all numbers from 1 to the given integer.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 98,
    "Topic": "Bit Manipulation",
    "Problem": "Program to find whether a no is power of two",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/power-of-2/0",
    "Difficulty": "Easy",
    "Description": "Power of 2: Given an integer, the task is to check if it is a power of 2 or not.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 99,
    "Topic": "Bit Manipulation",
    "Problem": "Find position of the only set bit",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/find-position-of-set-bit3706/1",
    "Difficulty": "Easy",
    "Description": "Find Position of Set Bit: Given an integer, the task is to find the position of the rightmost set bit (bit with value 1) in its binary representation.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 100,
    "Topic": "Bit Manipulation",
    "Problem": "Copy set bits in a range",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/copy-set-bits-in-a-range/",
    "Difficulty": "Easy",
    "Description": "Copy Set Bits in a Range: Given two integers and two positions, the task is to copy the set bits (bits with value 1) from the first integer to the second integer in the given range of positions.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 101,
    "Topic": "Bit Manipulation",
    "Problem": "Divide two integers without using multiplication, division and mod operator",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/divide-two-integers-without-using-multiplication-division-mod-operator/",
    "Difficulty": "Medium",
    "Description": "Divide Two Integers Without Using Multiplication, Division, or Modulo Operator: Given two integers, the task is to divide them without using multiplication, division, or modulo operator and return the quotient as an integer.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 102,
    "Topic": "Bit Manipulation",
    "Problem": "Calculate square of a number without using *, / and pow()",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/calculate-square-of-a-number-without-using-and-pow/",
    "Difficulty": "Medium",
    "Description": "Calculate Square of a Number without using and pow: The problem requires finding the square of a given number without using the multiplication () and power (pow) operators.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 103,
    "Topic": "Bit Manipulation",
    "Problem": "Power Set",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/power-set4302/1",
    "Difficulty": "Easy",
    "Description": "Power Set: The problem requires finding the power set of a given set, which is the set of all possible subsets of the given set.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 104,
    "Topic": "Binary Search Trees",
    "Problem": "Find a value in a BST",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/binary-search-tree-set-1-search-and-insertion/",
    "Difficulty": "Easy",
    "Description": "Binary Search Tree (BST) Search and Insertion: The problem requires implementing the search and insertion operations in a Binary Search Tree (BST), where each node has at most two child nodes, and the value of the node on the left is less than or equal to the value of its parent node, and the value of the node on the right is greater than or equal to the value of its parent node.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 105,
    "Topic": "Binary Search Trees",
    "Problem": "Deletion of a node in a BST",
    "Done": false,
    "URL": "https://leetcode.com/problems/delete-node-in-a-bst/",
    "Difficulty": "Medium",
    "Description": "Delete Node in a BST: The problem requires implementing the deletion operation in a Binary Search Tree (BST), where a given node with a specific value needs to be deleted while maintaining the properties of the BST.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 106,
    "Topic": "Binary Search Trees",
    "Problem": "Find min and max value in a BST",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/minimum-element-in-bst/1",
    "Difficulty": "Easy",
    "Description": "Minimum Element in BST: The problem requires finding the minimum element in a Binary Search Tree (BST), which is the leftmost element in the BST.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 107,
    "Topic": "Binary Search Trees",
    "Problem": "Find inorder successor and inorder predecessor in a BST",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/predecessor-and-successor/1",
    "Difficulty": "Medium",
    "Description": "Predecessor and Successor: The problem requires finding the predecessor and successor of a given key in a Binary Search Tree (BST), where the predecessor is the node with the largest value smaller than the given key, and the successor is the node with the smallest value greater than the given key.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 108,
    "Topic": "Binary Search Trees",
    "Problem": "Check if a tree is a BST or not ",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/check-for-bst/1",
    "Difficulty": "Easy",
    "Description": "Check for BST: The problem requires checking if a given binary tree is a Binary Search Tree (BST), where each node has at most two child nodes, and the value of the node on the left is less than or equal to the value of its parent node, and the value of the node on the right is greater than or equal to the value of its parent node.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 109,
    "Topic": "Binary Search Trees",
    "Problem": "Populate Inorder successor of all nodes",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/populate-inorder-successor-for-all-nodes/1",
    "Difficulty": "Medium",
    "Description": "Populate Inorder Successor for all Nodes: The problem requires populating the inorder successor of all nodes in a Binary Tree, where the inorder successor of a node is the node with the smallest value greater than the value of the given node in the inorder traversal of the tree.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 110,
    "Topic": "Binary Search Trees",
    "Problem": "Find LCA  of 2 nodes in a BST",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/lowest-common-ancestor-in-a-bst/1",
    "Difficulty": "Easy",
    "Description": "Lowest Common Ancestor in a BST: The problem requires finding the lowest common ancestor of two given nodes in a Binary Search Tree (BST), which is the node that is the nearest common ancestor of the given nodes and is also a part of the BST.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 111,
    "Topic": "Binary Search Trees",
    "Problem": "Construct BST from preorder traversal",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/construct-bst-from-given-preorder-traversa/",
    "Difficulty": "Medium",
    "Description": "Construct BST from given Preorder Traversal: The problem requires constructing a Binary Search Tree (BST) from a given preorder traversal, where the preorder traversal is the traversal of the tree in the order of root, left subtree, and right subtree.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 112,
    "Topic": "Binary Search Trees",
    "Problem": "Convert Binary tree into BST",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/binary-tree-to-bst/1",
    "Difficulty": "Easy",
    "Description": "Binary Tree to BST: The problem requires converting a given Binary Tree into a Binary Search Tree (BST), where each node has at most two child nodes, and the value of the node on the left is less than or equal to the value of its parent node, and the value of the node on the right is greater than or equal to the value of its parent node.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 113,
    "Topic": "Binary Search Trees",
    "Problem": "Convert a normal BST into a Balanced BST",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/convert-normal-bst-balanced-bst/",
    "Difficulty": "Easy",
    "Description": "Convert Normal BST to Balanced BST: The problem requires converting a given normal Binary Search Tree (BST) into a balanced BST, where a balanced BST is a BST in which the difference between the heights of the left subtree and right subtree of any node is at most 1",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 114,
    "Topic": "Binary Search Trees",
    "Problem": "Merge two BST [ V.V.V>IMP ]",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/merge-two-balanced-binary-search-trees/",
    "Difficulty": "Medium",
    "Description": "Merge Two Balanced Binary Search Trees: The problem requires merging two given balanced Binary Search Trees (BSTs) into a single balanced BST, where a balanced BST is a BST in which the difference between the heights of the left subtree and right subtree of any node is at most 1.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 115,
    "Topic": "Binary Search Trees",
    "Problem": "Find Kth largest element in a BST",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/kth-largest-element-in-bst/1",
    "Difficulty": "Easy",
    "Description": "Kth Largest Element in BST: The problem requires finding the kth largest element in a Binary Search Tree (BST), where k is a given positive integer.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 116,
    "Topic": "Binary Search Trees",
    "Problem": "Find Kth smallest element in a BST",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/find-k-th-smallest-element-in-bst/1",
    "Difficulty": "Medium",
    "Description": "Find k-th Smallest Element in BST: This problem involves finding the k-th smallest element in a Binary Search Tree (BST). The input is a BST and an integer k, and the task is to return the k-th smallest element in the BST.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 117,
    "Topic": "Binary Search Trees",
    "Problem": "Count pairs from 2 BST whose sum is equal to given value X",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/brothers-from-different-root/1",
    "Difficulty": "Easy",
    "Description": "Brothers from Different Root: This problem involves finding pairs of nodes with equal values from two different Binary Trees. The input is two Binary Trees and an integer value, and the task is to find all pairs of nodes (one from each tree) whose sum is equal to the given value.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 118,
    "Topic": "Binary Search Trees",
    "Problem": "Find the median of BST in O(n) time and O(1) space",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/find-median-bst-time-o1-space/",
    "Difficulty": "Easy",
    "Description": "Find Median in BST (O(1) Space): This problem involves finding the median (middle element) of a Binary Search Tree (BST) in constant space complexity. The input is a BST, and the task is to return the median of the elements in the BST.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 119,
    "Topic": "Binary Search Trees",
    "Problem": "Count BST ndoes that lie in a given range",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/count-bst-nodes-that-lie-in-a-given-range/1",
    "Difficulty": "Medium",
    "Description": "Count BST Nodes that Lie in a Given Range: This problem involves counting the number of nodes in a Binary Search Tree (BST) that lie within a given range. The input is a BST and two integer values representing the lower and upper bounds of the range, and the task is to count the number of nodes in the BST that have values within this range.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 120,
    "Topic": "Binary Search Trees",
    "Problem": "Replace every element with the least greater element on its right",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/replace-every-element-with-the-least-greater-element-on-its-right/",
    "Difficulty": "Medium",
    "Description": "Replace Every Element with the Least Greater Element on its Right: This problem involves replacing every element in an array with the least greater element on its right side. The input is an array of integers, and the task is to replace each element in the array with the smallest element that is greater than it and appears on its right side in the array.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 121,
    "Topic": "Binary Search Trees",
    "Problem": "Given n appointments, find the conflicting appointments",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/given-n-appointments-find-conflicting-appointments/",
    "Difficulty": "Medium",
    "Description": "Given N Appointments, Find Conflicting Appointments: This problem involves finding conflicting appointments from a list of N appointments. The input is a list of appointments represented by start and end times, and the task is to identify pairs of appointments that overlap or conflict with each other.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 122,
    "Topic": "Binary Search Trees",
    "Problem": "Check preorder is valid or not",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/preorder-to-postorder/0",
    "Difficulty": "Medium",
    "Description": "Preorder to Postorder: This problem involves converting a given Preorder traversal of a Binary Tree to its equivalent Postorder traversal. The input is an array representing the Preorder traversal of a Binary Tree, and the task is to return the equivalent Postorder traversal of the Binary Tree.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 123,
    "Topic": "Binary Search Trees",
    "Problem": "Check whether BST contains Dead end",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/check-whether-bst-contains-dead-end/1",
    "Difficulty": "Easy",
    "Description": "Check Whether BST Contains Dead End: This problem involves checking if a Binary Search Tree (BST) contains a \"dead end,\" which is a node with no children or a node whose left and right children have consecutive values. The input is a BST, and the task is to determine if it contains a dead end or not.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 124,
    "Topic": "Binary Search Trees",
    "Problem": "Largest BST in a Binary Tree [ V.V.V.V.V IMP ]",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/largest-bst/1",
    "Difficulty": "Medium",
    "Description": "Largest BST: This problem involves finding the size of the largest Binary Search Tree (BST) in a Binary Tree. The input is a Binary Tree, and the task is to find the size (number of nodes) of the largest BST within the given Binary Tree.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 125,
    "Topic": "Binary Search Trees",
    "Problem": "Flatten BST to sorted list",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/flatten-bst-to-sorted-list-increasing-order/",
    "Difficulty": "Medium",
    "Description": "Flatten BST to Sorted List (Increasing Order): This problem involves flattening a Binary Search Tree (BST) into a sorted list in increasing order. The input is a BST, and the task is to rearrange its nodes into a sorted list such that the resulting list is in increasing order.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 126,
    "Topic": "Dynamic Programming",
    "Problem": "Coin Change",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/coin-change2448/1",
    "Difficulty": "Medium",
    "Description": "Coin Change: This problem involves finding the number of ways to make change for a given amount using a given set of coins. The input is an integer amount and an array of integers representing the coins, and the task is to find the number of distinct ways to make change for the given amount using the given coins.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 127,
    "Topic": "Dynamic Programming",
    "Problem": "Knapsack",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/0-1-knapsack-problem/0",
    "Difficulty": "Medium",
    "Description": "0-1 Knapsack Problem: This problem involves finding the maximum value that can be obtained by selecting items from a given set of items, each with a weight and a value, and putting them into a knapsack with a limited weight capacity. The input is a set of items with their weights and values, and the weight capacity of the knapsack",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 128,
    "Topic": "Dynamic Programming",
    "Problem": "Binomial Coefficient",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/ncr1019/1",
    "Difficulty": "Medium",
    "Description": "NCR1019: This is a problem on GeeksforGeeks related to calculating the value of NCR (combination) for given values of N and R. The task is to implement a function that takes two integers N and R as input and returns the value of NCR.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 129,
    "Topic": "Dynamic Programming",
    "Problem": "Permutation Coefficient",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/permutation-coefficient/",
    "Difficulty": "Easy",
    "Description": "Permutation Coefficient: This is an algorithm problem on GeeksforGeeks that involves calculating the permutation coefficient of two given integers n and k. The task is to implement a function that takes two integers n and k as input and returns the permutation coefficient.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 130,
    "Topic": "Dynamic Programming",
    "Problem": "Program for nth Catalan Number",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/program-nth-catalan-number/",
    "Difficulty": "Easy",
    "Description": "Nth Catalan Number: This is a problem on GeeksforGeeks that involves finding the Nth Catalan number using dynamic programming. The task is to implement a function that takes an integer N as input and returns the Nth Catalan number.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 131,
    "Topic": "Dynamic Programming",
    "Problem": "Matrix Chain Multiplication ",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/matrix-chain-multiplication-dp-8/",
    "Difficulty": "Hard",
    "Description": "Matrix Chain Multiplication: This is a dynamic programming problem on GeeksforGeeks that involves finding the minimum number of scalar multiplications required to multiply a chain of matrices. The task is to implement a function that takes an array of dimensions of matrices as input and returns the minimum number of scalar multiplications.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 132,
    "Topic": "Dynamic Programming",
    "Problem": "Edit Distance",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/edit-distance3702/1",
    "Difficulty": "Medium",
    "Description": "\"Edit Distance\": This is a dynamic programming problem on GeeksforGeeks that involves finding the minimum number of operations (insertions, deletions, substitutions) required to convert one string to another. The task is to implement a function that takes two strings as input and returns the minimum edit distance.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 133,
    "Topic": "Dynamic Programming",
    "Problem": "Subset Sum ",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/subset-sum-problem2014/1",
    "Difficulty": "Medium",
    "Description": "\"Subset Sum Problem\": This is a dynamic programming problem on GeeksforGeeks that involves finding if there exists a subset of a given array with a given sum. The task is to implement a function that takes an array of integers and a target sum as input and returns true if there exists a subset with the given sum, and false otherwise.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 134,
    "Topic": "Dynamic Programming",
    "Problem": "Friends Pairing",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/friends-pairing-problem5425/1",
    "Difficulty": "Easy",
    "Description": "\"Friends Pairing Problem\": This is a dynamic programming problem on GeeksforGeeks that involves finding the number of ways friends can pair up for a party, given that each friend can either go solo or pair up with another friend. The task is to implement a function that takes an integer n (number of friends) as input and returns the number of ways friends can pair up.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 135,
    "Topic": "Dynamic Programming",
    "Problem": "Gold Mine",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/gold-mine-problem/",
    "Difficulty": "Easy",
    "Description": "\"Gold Mine Problem\": This is a dynamic programming problem on GeeksforGeeks that involves finding the maximum amount of gold that can be collected by a miner from a gold mine, following certain rules. The task is to implement a function that takes a 2D matrix representing the gold mine as input and returns the maximum amount of gold that can be collected.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 136,
    "Topic": "Dynamic Programming",
    "Problem": "Assembly Line Scheduling",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/assembly-line-scheduling-dp-34/",
    "Difficulty": "Medium",
    "Description": "\"Assembly Line Scheduling\": This is a dynamic programming problem on GeeksforGeeks that involves finding the minimum time required to complete a task on two parallel assembly lines with multiple stations. The task is to implement a function that takes two arrays representing the time taken at each station on the two assembly lines, and arrays representing the time taken to switch between assembly lines, and returns the minimum time required to complete the task.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 137,
    "Topic": "Dynamic Programming",
    "Problem": "Painting the Fenceproblem",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/painting-the-fence3727/1",
    "Difficulty": "Medium",
    "Description": "�Painting the Fence\": This is a dynamic programming problem on GeeksforGeeks that involves finding the number of ways to paint a fence with k colors, such that no more than two adjacent fences have the same color. The task is to implement a function that takes an integer n (number of fences) and an integer k (number of colors) as input and returns the number of ways to paint the fence.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 138,
    "Topic": "Dynamic Programming",
    "Problem": "Maximize The Cut Segments",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/cutted-segments/0",
    "Difficulty": "Medium",
    "Description": "\"Cutted Segments\": This is a dynamic programming problem on GeeksforGeeks that involves finding the maximum number of segments that can be cut from a given length using given segment lengths. The task is to implement a function that takes an integer n (length of the given segment) and an array of integers representing the segment lengths as",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 139,
    "Topic": "Dynamic Programming",
    "Problem": "Longest Common Subsequence",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/longest-common-subsequence/0",
    "Difficulty": "Medium",
    "Description": "Longest Common Subsequence: This is a problem in computer science and dynamic programming where the goal is to find the longest common subsequence of two given strings. The input consists of two strings and the output should be the longest subsequence that is common to both strings.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 140,
    "Topic": "Dynamic Programming",
    "Problem": "Longest Repeated Subsequence",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/longest-repeating-subsequence/0",
    "Difficulty": "Medium",
    "Description": "Longest Repeating Subsequence: This problem is similar to the Longest Common Subsequence problem, but with a slight variation. Instead of finding the longest subsequence that is common to two different strings, the goal is to find the longest subsequence that appears more than once in a single given string.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 141,
    "Topic": "Dynamic Programming",
    "Problem": "Longest Increasing Subsequence",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/longest-increasing-subsequence/0",
    "Difficulty": "Medium",
    "Description": "Longest Increasing Subsequence: This problem involves finding the longest subsequence of a given sequence of numbers such that the elements are in strictly increasing order. The input consists of an array of integers, and the output should be the length of the longest increasing subsequence.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 142,
    "Topic": "Dynamic Programming",
    "Problem": "Space Optimized Solution of LCS",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/space-optimized-solution-lcs/",
    "Difficulty": "Medium",
    "Description": "Space-Optimized Solution for Longest Common Subsequence: This is a variation of the Longest Common Subsequence problem, where the goal is to find the longest common subsequence of two given strings using a space-optimized approach. The traditional approach to solve this problem involves dynamic programming, but this solution aims to optimize the space complexity of the algorithm.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 143,
    "Topic": "Dynamic Programming",
    "Problem": "LCS (Longest Common Subsequence) of three strings",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/lcs-of-three-strings/0",
    "Difficulty": "Medium",
    "Description": "Longest Common Subsequence of Three Strings: This problem is an extension of the Longest Common Subsequence problem, where the goal is to find the longest common subsequence of three given strings instead of two. The input consists of three strings, and the output should be the longest subsequence that is common to all three strings.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 144,
    "Topic": "Dynamic Programming",
    "Problem": "Maximum Sum Increasing Subsequence",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/maximum-sum-increasing-subsequence4749/1",
    "Difficulty": "Medium",
    "Description": "Maximum Sum Increasing Subsequence: This is a problem involving dynamic programming, where the goal is to find the maximum sum of an increasing subsequence of a given array of integers. The input consists of an array of integers, and the output should be the maximum sum that can be obtained by selecting a subsequence with strictly increasing elements.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 145,
    "Topic": "Dynamic Programming",
    "Problem": "Count all subsequences having product less than K",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/count-subsequences-product-less-k/",
    "Difficulty": "Medium",
    "Description": "Count of Subsequences with Product Less Than K: This problem involves counting the number of subsequences of a given array of integers, such that the product of the elements in the subsequence is less than a given integer K. The input consists of an array of integers and an integer K, and the output should be the count of such subsequences.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 146,
    "Topic": "Dynamic Programming",
    "Problem": "Longest subsequence such that difference between adjacent is one",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/longest-subsequence-such-that-difference-between-adjacents-is-one4724/1",
    "Difficulty": "Easy",
    "Description": "Longest Subsequence with Adjacent Differences of One: This problem involves finding the longest subsequence of a given array of integers, such that the absolute difference between any two adjacent elements in the subsequence is exactly one. The input consists of an array of integers, and the output should be the length of the longest subsequence that satisfies this condition.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 147,
    "Topic": "Dynamic Programming",
    "Problem": "Maximum subsequence sum such that no three are consecutive",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/maximum-subsequence-sum-such-that-no-three-are-consecutive/",
    "Difficulty": "Medium",
    "Description": "Maximum Subsequence Sum with No Three Consecutive Elements: This problem involves finding the maximum sum of a subsequence of a given array of integers, such that no three consecutive elements are included in the subsequence. The input consists of an array of integers, and the output should be the maximum sum that can be obtained by selecting a valid subsequence.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 148,
    "Topic": "Dynamic Programming",
    "Problem": "Egg Dropping ",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/egg-dropping-puzzle/0",
    "Difficulty": "Medium",
    "Description": "Egg Dropping Puzzle: This is a classic problem involving dynamic programming, where the goal is to find the minimum number of attempts required to determine the critical floor from which an egg will break when dropped from a given number of floors in a building. The input consists of the number of floors and the number of eggs, and the output should be the minimum number of attempts required.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 149,
    "Topic": "Dynamic Programming",
    "Problem": "Maximum Length Chain of Pairs",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/max-length-chain/1",
    "Difficulty": "Medium",
    "Description": "Maximum Length Chain of Pairs: This problem involves finding the length of the longest chain of pairs in a given array of pairs, where each pair consists of two integers (a, b) such that a < b. The input consists of an array of pairs, and the output should be the length of the longest chain that can be formed by selecting pairs in a valid sequence.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 150,
    "Topic": "Dynamic Programming",
    "Problem": "Maximum size square sub-matrix with all 1s",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/largest-square-formed-in-a-matrix/0",
    "Difficulty": "Medium",
    "Description": "Largest Square Formed in a Matrix:The problem requires finding the largest square submatrix consisting of only 1s in a given binary matrix. The task is to determine the size of the largest square submatrix that can be formed and return the size as the result.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 151,
    "Topic": "Dynamic Programming",
    "Problem": "Maximum sum of pairs with specific difference",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/pairs-with-specific-difference/0",
    "Difficulty": "Easy",
    "Description": "Pairs with Specific Difference:The problem involves finding pairs with a specific difference k from a given array of integers. The task is to determine the count of such pairs that satisfy the given condition.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 152,
    "Topic": "Dynamic Programming",
    "Problem": "Min Cost Path",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/path-in-matrix3805/1",
    "Difficulty": "Medium",
    "Description": "Path in Matrix:The problem requires finding the maximum sum path from the top-left corner to the bottom-right corner of a given matrix. The task is to find the maximum sum that can be obtained by traversing only right, down, or diagonally adjacent cells in the matrix.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 153,
    "Topic": "Dynamic Programming",
    "Problem": "Maximum difference of zeros and ones in binary string",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/maximum-difference-of-zeros-and-ones-in-binary-string4111/1",
    "Difficulty": "Easy",
    "Description": "Maximum Difference of Zeros and Ones in Binary String:The problem involves finding the maximum difference between the count of zeros and ones in a binary string. The task is to find the maximum difference that can be obtained by flipping some of the bits in the binary string.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 154,
    "Topic": "Dynamic Programming",
    "Problem": "Minimum number of jumps to reach end",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/minimum-number-of-jumps/0",
    "Difficulty": "Medium",
    "Description": "Minimum Number of Jumps:The problem requires finding the minimum number of jumps needed to reach the end of an array, where each element represents the maximum number of steps that can be taken forward. The task is to find the minimum number of jumps required to reach the end of the array.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 155,
    "Topic": "Dynamic Programming",
    "Problem": "Minimum cost to fill given weight in a bag",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/minimum-cost-to-fill-given-weight-in-a-bag1956/1",
    "Difficulty": "Medium",
    "Description": "Minimum Cost to Fill Given Weight in a Bag:The problem involves finding the minimum cost to fill a given weight in a bag, given the weights and values of items that can be used to fill the bag. The task is to find the minimum cost to fill the bag with the given weight.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 156,
    "Topic": "Dynamic Programming",
    "Problem": "Minimum removals from array to make max –min <= K",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/minimum-removals-array-make-max-min-k/",
    "Difficulty": "Medium",
    "Description": "Minimum Removals from Array to Make Max - Min <= K:The problem requires finding the minimum number of removals from an array to make the difference between the maximum and minimum element of the array less than or equal to a given value K. The task is to find the minimum number of removals required to satisfy the given condition.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 157,
    "Topic": "Dynamic Programming",
    "Problem": "Longest Common Substring",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/longest-common-substring/0",
    "Difficulty": "Medium",
    "Description": "Longest Common Substring:The problem involves finding the longest common substring between two given strings. The task is to find the length of the longest common substring that exists in both the given strings.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 158,
    "Topic": "Dynamic Programming",
    "Problem": "Count number of ways to reacha given score in a game",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/reach-a-given-score/0",
    "Difficulty": "Easy",
    "Description": "Reach a Given Score:The problem requires finding the number of ways to reach a given score by using only given set of scores. The task is to find the count of possible ways to reach the given score.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 159,
    "Topic": "Dynamic Programming",
    "Problem": "Count Balanced Binary Trees of Height h",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/bbt-counter/0",
    "Difficulty": "Easy",
    "Description": "Balanced Binary Tree Counter:The problem involves finding the count of all possible balanced binary trees with a given height. The task is to find the count of balanced binary trees with the given height.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 160,
    "Topic": "Dynamic Programming",
    "Problem": "LargestSum Contiguous Subarray [V>V>V>V IMP ]",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/kadanes-algorithm/0",
    "Difficulty": "Medium",
    "Description": "Kadane's Algorithm:The problem requires finding the maximum sum subarray from a given array of integers. The task is to find the maximum sum that can be obtained by selecting a contiguous subarray from the given array.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 161,
    "Topic": "Dynamic Programming",
    "Problem": "Smallest sum contiguous subarray",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/smallest-sum-contiguous-subarray/",
    "Difficulty": "Medium",
    "Description": "Smallest Sum Contiguous Subarray:The problem involves finding the smallest sum of a contiguous subarray from a given array of integers. The task is to find the smallest sum that can be obtained by selecting a contiguous subarray from the given array.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 162,
    "Topic": "Dynamic Programming",
    "Problem": "Unbounded Knapsack (Repetition of items allowed)",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/knapsack-with-duplicate-items4201/1",
    "Difficulty": "Easy",
    "Description": "Knapsack with Duplicate Items:The problem involves finding the maximum value that can be obtained from a knapsack with duplicate items, given the weights, values, and capacity of the knapsack. The task is to find the maximum value that can be obtained by filling the knapsack with duplicate items.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 163,
    "Topic": "Dynamic Programming",
    "Problem": "Word Break",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/word-break/0",
    "Difficulty": "Medium",
    "Description": "Word Break: Given a dictionary of words and a string, the task is to determine if the string can be segmented into a space-separated sequence of words from the dictionary.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 164,
    "Topic": "Dynamic Programming",
    "Problem": "Largest Independent Set ",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/largest-independent-set-problem-dp-26/",
    "Difficulty": "Medium",
    "Description": "Largest Independent Set Problem: This problem involves finding the size of the largest independent set in a given binary tree. An independent set is a set of nodes in a graph such that no two nodes in the set are adjacent.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 165,
    "Topic": "Dynamic Programming",
    "Problem": "Partition problem",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/subset-sum-problem2014/1",
    "Difficulty": "Medium",
    "Description": "Subset Sum Problem: Given a set of positive integers and a target sum, the task is to find if there exists a subset of the given set whose sum is equal to the target sum.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 166,
    "Topic": "Dynamic Programming",
    "Problem": "Longest Palindromic Subsequence",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/longest-palindromic-subsequence-dp-12/",
    "Difficulty": "Medium",
    "Description": "Longest Palindromic Subsequence: Given a string, the task is to find the length of the longest subsequence that is a palindrome. A subsequence is a sequence of characters obtained by deleting some characters from the original string without changing the relative order of the remaining characters.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 167,
    "Topic": "Dynamic Programming",
    "Problem": "Count All Palindromic Subsequence in a given String",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/count-palindromic-subsequences/1",
    "Difficulty": "Medium",
    "Description": "Count Palindromic Subsequences: Given a string, the task is to count the number of palindromic subsequences that can be formed from the given string. A subsequence is a sequence of characters obtained by deleting some characters from the original string without changing the relative order of the remaining characters.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 168,
    "Topic": "Dynamic Programming",
    "Problem": "Longest Palindromic Substring",
    "Done": false,
    "URL": "https://leetcode.com/problems/longest-palindromic-substring/",
    "Difficulty": "Medium",
    "Description": "Longest Palindromic Substring: Given a string, the task is to find the longest substring that is a palindrome. A palindrome is a string that reads the same forwards and backwards.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 169,
    "Topic": "Dynamic Programming",
    "Problem": "Longest alternating subsequence",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/longest-alternating-subsequence/0",
    "Difficulty": "Medium",
    "Description": "Longest Alternating Subsequence: Given an array of integers, the task is to find the length of the longest subsequence such that the elements in the subsequence alternatively increase and decrease in value.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 170,
    "Topic": "Dynamic Programming",
    "Problem": "Weighted Job Scheduling",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/weighted-job-scheduling/",
    "Difficulty": "Medium",
    "Description": "Weighted Job Scheduling: This problem involves scheduling jobs with different weights and durations on a single machine in such a way that the total weight of the scheduled jobs is maximized, and no two jobs overlap in time.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 171,
    "Topic": "Dynamic Programming",
    "Problem": "Coin game winner where every player has three choices",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/coin-game-winner-every-player-three-choices/",
    "Difficulty": "Easy",
    "Description": "Coin Game Winner Every Player Three Choices: This problem involves a game in which players take turns to pick a coin from either end of an array of coins. Each player has three choices of which end to pick from, and the goal is to maximize the total number of coins picked by a player.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 172,
    "Topic": "Dynamic Programming",
    "Problem": "Count Derangements (Permutation such that no element appears in its original position) [ IMPORTANT ]",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/count-derangements-permutation-such-that-no-element-appears-in-its-original-position/",
    "Difficulty": "Easy",
    "Description": "Count Derangements: Given a permutation of numbers from 1 to n, the task is to count the number of derangements, which are permutations in which no element appears in its original position.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 173,
    "Topic": "Dynamic Programming",
    "Problem": "Maximum profit by buying and selling a share at most twice [ IMP ]",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/maximum-profit-by-buying-and-selling-a-share-at-most-twice/",
    "Difficulty": "Medium",
    "Description": "Maximum Profit by Buying and Selling a Share at Most Twice: Given an array of stock prices, the task is to find the maximum profit that can be obtained by buying and selling a share at most twice, with the constraint that a share cannot be bought and sold on the same day.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 174,
    "Topic": "Dynamic Programming",
    "Problem": "Optimal Strategy for a Game",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/optimal-strategy-for-a-game/0",
    "Difficulty": "Medium",
    "Description": "Optimal Strategy for a Game: This problem involves finding the maximum amount of money that can be obtained by playing a game with a list of positive integers, where two players take turns to select an integer from the ends of the list, and the goal is to maximize the total sum of selected integers.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 175,
    "Topic": "Dynamic Programming",
    "Problem": "Optimal Binary Search Tree",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/optimal-binary-search-tree-dp-24/",
    "Difficulty": "Hard",
    "Description": "Optimal Binary Search Tree: Given a sorted list of keys with their probabilities, the task is to construct a binary search tree with minimum expected search cost.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 176,
    "Topic": "Dynamic Programming",
    "Problem": "Palindrome Partitioning",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/palindromic-patitioning4845/1",
    "Difficulty": "Hard",
    "Description": "Palindromic Partitioning: Given a string, the task is to partition the string into a minimum number of palindromic substrings.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 177,
    "Topic": "Dynamic Programming",
    "Problem": "Word Wrap ",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/word-wrap/0",
    "Difficulty": "Hard",
    "Description": "Word Wrap: Given a list of words and a line width, the task is to format the words into lines such that no line exceeds the given width, and the total cost of formatting is minimized.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 178,
    "Topic": "Dynamic Programming",
    "Problem": "Mobile Numeric Keypad ",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/mobile-numeric-keypad5456/1",
    "Difficulty": "Medium",
    "Description": "Mobile Numeric Keypad: This problem involves finding the number of possible combinations of a sequence of numbers pressed on a mobile numeric keypad, where each key has certain adjacent keys that can be pressed. The task is to count the number of possible combinations that can be generated by pressing a given sequence of keys, while considering the adjacency of keys and the rules of the numeric keypad.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 179,
    "Topic": "Dynamic Programming",
    "Problem": "Boolean Parenthesization ",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/boolean-parenthesization/0",
    "Difficulty": "Hard",
    "Description": "Boolean Parenthesization: This problem involves evaluating a boolean expression with given operands and operators, and finding the number of possible ways to parenthesize the expression in order to get a desired result. The task is to count the number of valid ways to parenthesize the boolean expression so that it evaluates to the given result, considering the precedence of operators and the rules of boolean algebra.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 180,
    "Topic": "Dynamic Programming",
    "Problem": "Largest rectangular sub-matrix whose sum is 0",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/largest-rectangular-sub-matrix-whose-sum-0/",
    "Difficulty": "Hard",
    "Description": "Largest Rectangular Sub-Matrix Whose Sum is 0: This problem involves finding the largest rectangular sub-matrix in a given matrix, whose sum of elements is equal to 0. The task is to find the dimensions (rows and columns) of the largest sub-matrix whose sum is 0, and return the sub-matrix or its dimensions.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 181,
    "Topic": "Dynamic Programming",
    "Problem": "Largest area rectangular sub-matrix with equal number of 1’s and 0’s [ IMP ]",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/largest-area-rectangular-sub-matrix-equal-number-1s-0s/",
    "Difficulty": "Hard",
    "Description": "Largest Area Rectangular Sub-Matrix with Equal Number of 1s and 0s: This problem involves finding the largest rectangular sub-matrix in a binary matrix, where the sub-matrix has an equal number of 1s and 0s. The task is to find the dimensions (rows and columns) of the largest sub-matrix which has an equal number of 1s and 0s, and return the sub-matrix or its dimensions.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 182,
    "Topic": "Dynamic Programming",
    "Problem": "Maximum sum rectangle in a 2D matrix",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/maximum-sum-rectangle/0",
    "Difficulty": "Medium",
    "Description": "Maximum Sum Rectangle: This problem involves finding the rectangular sub-matrix with the maximum sum in a given matrix. The task is to find the dimensions (rows and columns) of the sub-matrix with the maximum sum, and return the sub-matrix or its dimensions.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 183,
    "Topic": "Dynamic Programming",
    "Problem": "Maximum profit by buying and selling a share at most k times",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/maximum-profit4657/1",
    "Difficulty": "Hard",
    "Description": "Maximum Profit: This problem involves finding the maximum profit that can be obtained from buying and selling stocks with certain constraints, such as buying and selling at most once, or buying and selling multiple times with a cooldown period. The task is to find the maximum profit that can be obtained by buying and selling stocks, while considering the constraints and rules of stock trading.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 184,
    "Topic": "Dynamic Programming",
    "Problem": "Find if a string is interleaved of two other strings",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/interleaved-strings/1",
    "Difficulty": "Medium",
    "Description": "Interleaved Strings: This problem involves determining if a given string can be obtained by interleaving two other strings, while maintaining the relative order of characters from both strings. The task is to determine if a given string can be obtained by interleaving two other strings, and return true or false accordingly.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 185,
    "Topic": "Dynamic Programming",
    "Problem": "Maximum Length of Pair Chain",
    "Done": false,
    "URL": "https://leetcode.com/problems/maximum-length-of-pair-chain/",
    "Difficulty": "Medium",
    "Description": "Maximum Length of Pair Chain: This problem involves finding the length of the longest chain of pairs of elements, where each pair contains two elements and the second element is greater than the first element. The task is to find the length of the longest chain of such pairs in a given set of pairs, and return the length of the chain.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 186,
    "Topic": "Graph",
    "Problem": "Create a Graph, print it",
    "Done": false,
    "URL": "https://1drv.ms/t/s!AqTOHFO77CqEiRua06v1PATyiFg5",
    "Difficulty": "Medium",
    "Description": "NOT FOUND",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 187,
    "Topic": "Graph",
    "Problem": "Implement BFS algorithm ",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/bfs-traversal-of-graph/1",
    "Difficulty": "Easy",
    "Description": "BFS Traversal of Graph: This problem involves performing a Breadth-First Search (BFS) traversal of a given graph, which is represented as an adjacency list or an adjacency matrix. The task is to traverse the graph using BFS and return the order in which the vertices are visited.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 188,
    "Topic": "Graph",
    "Problem": "Implement DFS Algo ",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/depth-first-search-or-dfs-for-a-graph/",
    "Difficulty": "Easy",
    "Description": "Depth-First Search (DFS) for a Graph: This problem involves performing a Depth-First Search (DFS) traversal of a given graph, which is represented as an adjacency list or an adjacency matrix. The task is to traverse the graph using DFS and return the order in which the vertices are visited.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 189,
    "Topic": "Graph",
    "Problem": "Detect Cycle in Directed Graph using BFS/DFS Algo ",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/detect-cycle-in-a-graph/",
    "Difficulty": "Medium",
    "Description": "Detect Cycle in a Graph: This problem involves determining if a given graph contains a cycle, i.e., if there is a path that starts from a vertex and returns to the same vertex, traversing through other vertices. The task is to determine if a given graph contains a cycle and return true",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 190,
    "Topic": "Graph",
    "Problem": "Detect Cycle in UnDirected Graph using BFS/DFS Algo ",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/detect-cycle-in-an-undirected-graph/1",
    "Difficulty": "Medium",
    "Description": "Detect Cycle in an Undirected Graph: Given an undirected graph, the task is to detect if it contains any cycle or not.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 191,
    "Topic": "Graph",
    "Problem": "Search in a Maze",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/rat-in-a-maze-problem/1",
    "Difficulty": "Medium",
    "Description": "Rat in a Maze Problem: Given a maze represented as a 2D grid, the task is to find a path from the top-left corner to the bottom-right corner while avoiding obstacles.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 192,
    "Topic": "Graph",
    "Problem": "Minimum Step by Knight",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/steps-by-knight/0",
    "Difficulty": "Medium",
    "Description": "Steps by Knight: Given a chessboard and a starting position of a knight, the task is to find the minimum number of steps the knight needs to take to reach a target position.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 193,
    "Topic": "Graph",
    "Problem": "flood fill algo",
    "Done": false,
    "URL": "https://leetcode.com/problems/flood-fill/",
    "Difficulty": "Easy",
    "Description": "Flood Fill: Given an image represented as a 2D array and a starting pixel, the task is to fill the image with a new color using flood fill algorithm.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 194,
    "Topic": "Graph",
    "Problem": "Clone a graph",
    "Done": false,
    "URL": "https://leetcode.com/problems/clone-graph/",
    "Difficulty": "Medium",
    "Description": "Clone Graph: Given a graph represented as an adjacency list, the task is to clone the graph and return the cloned graph.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 195,
    "Topic": "Graph",
    "Problem": "Making wired Connections",
    "Done": false,
    "URL": "https://leetcode.com/problems/number-of-operations-to-make-network-connected/",
    "Difficulty": "Medium",
    "Description": "Number of Operations to Make Network Connected: Given a network of n computers, represented as an adjacency list, the task is to find the minimum number of operations required to make all computers connected in a single network.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 196,
    "Topic": "Graph",
    "Problem": "word Ladder ",
    "Done": false,
    "URL": "https://leetcode.com/problems/word-ladder/",
    "Difficulty": "Hard",
    "Description": "Word Ladder: Given two words and a list of words in a dictionary, the task is to find the shortest path to convert one word to another by changing only one character at a time, such that all intermediate words are present in the dictionary.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 197,
    "Topic": "Graph",
    "Problem": "Dijkstra algo",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/dijkstras-shortest-path-algorithm-greedy-algo-7/",
    "Difficulty": "Medium",
    "Description": "Dijkstra's Shortest Path Algorithm: Given a weighted directed graph, the task is to find the shortest path from a source vertex to all other vertices using Dijkstra's algorithm.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 198,
    "Topic": "Graph",
    "Problem": "Implement Topological Sort ",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/topological-sort/1",
    "Difficulty": "Medium",
    "Description": "Topological Sort: Given a directed acyclic graph (DAG), the task is to find a valid topological ordering of the vertices, if it exists.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 199,
    "Topic": "Graph",
    "Problem": "Minimum time taken by each job to be completed given by a Directed Acyclic Graph",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/minimum-time-taken-by-each-job-to-be-completed-given-by-a-directed-acyclic-graph/",
    "Difficulty": "Medium",
    "Description": "Minimum Time Taken by Each Job to be Completed Given by a Directed Acyclic Graph: Given a directed acyclic graph (DAG) representing dependencies between jobs and their durations, the task is to find the minimum time taken by each job to be completed.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 200,
    "Topic": "Graph",
    "Problem": "Find whether it is possible to finish all tasks or not from given dependencies",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/find-whether-it-is-possible-to-finish-all-tasks-or-not-from-given-dependencies/",
    "Difficulty": "Medium",
    "Description": "Find Whether it is Possible to Finish All Tasks or Not from Given Dependencies: Given a list of tasks and their dependencies, the task is to find whether it is possible to finish all tasks or not.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 201,
    "Topic": "Graph",
    "Problem": "Find the no. of Isalnds",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/find-the-number-of-islands/1",
    "Difficulty": "Medium",
    "Description": "Find the Number of Islands: Given a 2D grid representing a matrix of '1's (land) and '0's (water), the task is to find the number of islands in the grid.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 202,
    "Topic": "Graph",
    "Problem": "Given a sorted Dictionary of an Alien Language, find order of characters",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/alien-dictionary/1",
    "Difficulty": "Hard",
    "Description": "Alien Dictionary: Given a list of words in a dictionary, the task is to find the correct order of characters in an alien language based on the given words.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 203,
    "Topic": "Graph",
    "Problem": "Implement Kruksal’sAlgorithm",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/kruskals-minimum-spanning-tree-algorithm-greedy-algo-2/",
    "Difficulty": "Medium",
    "Description": "Kruskal's Minimum Spanning Tree Algorithm: Given an undirected weighted graph, the task is to find the minimum spanning tree (MST) using Kruskal's algorithm.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 204,
    "Topic": "Graph",
    "Problem": "Implement Prim’s Algorithm",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/prims-minimum-spanning-tree-mst-greedy-algo-5/",
    "Difficulty": "Medium",
    "Description": "Prim's Minimum Spanning Tree (MST) Algorithm: Given an undirected weighted graph, the task is to find the minimum spanning tree (MST) using Prim's algorithm.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 205,
    "Topic": "Graph",
    "Problem": "Total no. of Spanning tree in a graph",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/total-number-spanning-trees-graph/",
    "Difficulty": "Hard",
    "Description": "Total Number of Spanning Trees in a Graph: Given an undirected graph, the task is to find the total number of spanning trees in the graph.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 206,
    "Topic": "Graph",
    "Problem": "Implement Bellman Ford Algorithm",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/negative-weight-cycle/0",
    "Difficulty": "Medium",
    "Description": "Negative Weight Cycle: Given a directed graph with weighted edges, the task is to check if the graph contains any negative weight cycle.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 207,
    "Topic": "Graph",
    "Problem": "Implement Floyd warshallAlgorithm",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/implementing-floyd-warshall/0",
    "Difficulty": "Medium",
    "Description": "Implementing Floyd Warshall Algorithm: Given a weighted directed graph, the task is to find the shortest path between all pairs of vertices using Floyd Warshall algorithm.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 208,
    "Topic": "Graph",
    "Problem": "Travelling Salesman ",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/travelling-salesman-problem-set-1/",
    "Difficulty": "Hard",
    "Description": "Travelling Salesman Problem: Given a complete undirected graph and a starting vertex, the task is to find the shortest possible route that visits all vertices exactly once and returns to the starting vertex.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 209,
    "Topic": "Graph",
    "Problem": "Graph Colouring",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/graph-coloring-applications/",
    "Difficulty": "Medium",
    "Description": "Graph Coloring Applications: Given an undirected graph, the task is to find various applications of graph coloring, such as scheduling",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 210,
    "Topic": "Graph",
    "Problem": "Snake and Ladders",
    "Done": false,
    "URL": "https://leetcode.com/problems/snakes-and-ladders/",
    "Difficulty": "Medium",
    "Description": "NOT FOUND",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 211,
    "Topic": "Graph",
    "Problem": "Find bridge in a graph",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/bridge-in-a-graph/",
    "Difficulty": "Hard",
    "Description": "Bridge in a Graph: Given an undirected graph, the task is to find all the bridges in the graph. A bridge is an edge whose removal increases the number of connected components in the graph.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 212,
    "Topic": "Graph",
    "Problem": "Count Strongly connected Components(Kosaraju Algo)",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/strongly-connected-components-kosarajus-algo/1",
    "Difficulty": "Medium",
    "Description": "Strongly Connected Components - Kosaraju's Algorithm: Given a directed graph, the task is to find the strongly connected components (SCCs) using Kosaraju's Algorithm. SCCs are subsets of vertices in which every vertex is reachable from every other vertex.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 213,
    "Topic": "Graph",
    "Problem": "Check whether a graph is Bipartite or Not",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/bipartite-graph/",
    "Difficulty": "Medium",
    "Description": "Bipartite Graph: Given an undirected graph, the task is to check if it can be divided into two disjoint sets (or partitions) such that every edge in the graph connects a vertex from one set to another set.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 214,
    "Topic": "Graph",
    "Problem": "Detect Negative cycle in a graph",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/detect-negative-cycle-graph-bellman-ford/",
    "Difficulty": "Medium",
    "Description": "Detect Negative Cycle in Graph - Bellman Ford: Given a directed graph with weighted edges, the task is to check if there is a negative cycle present in the graph using Bellman Ford algorithm. A negative cycle is a cycle whose total weight is negative.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 215,
    "Topic": "Graph",
    "Problem": "Longest path in a Directed Acyclic Graph",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/find-longest-path-directed-acyclic-graph/",
    "Difficulty": "Hard",
    "Description": "Find Longest Path in Directed Acyclic Graph: Given a directed acyclic graph (DAG) with weighted edges, the task is to find the longest path in the graph. A path is a sequence of vertices in which every vertex is reachable from its previous vertex and the sum of weights of all the edges in the path is maximum.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 216,
    "Topic": "Graph",
    "Problem": "Journey to the Moon",
    "Done": false,
    "URL": "https://www.hackerrank.com/challenges/journey-to-the-moon/problem",
    "Difficulty": "Medium",
    "Description": "Journey to the Moon: Given a graph representing astronauts and their pairs of countries, the task is to find the total number of ways to make a team of astronauts for a mission to the moon, such that no two astronauts in the team belong to the same country.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 217,
    "Topic": "Graph",
    "Problem": "Cheapest Flights Within K Stops",
    "Done": false,
    "URL": "https://leetcode.com/problems/cheapest-flights-within-k-stops/description/",
    "Difficulty": "Medium",
    "Description": "Cheapest Flights Within K Stops: Given a directed graph with weighted edges representing flights between cities, the task is to find the cheapest flight from a source city to a destination city with at most K stops.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 218,
    "Topic": "Graph",
    "Problem": "Oliver and the Game",
    "Done": false,
    "URL": "https://www.hackerearth.com/practice/algorithms/graphs/topological-sort/practice-problems/algorithm/oliver-and-the-game-3/",
    "Difficulty": "Medium",
    "Description": "Oliver and the Game: Given a graph representing a gameboard with colored cells, the task is to find the shortest number of steps to reach the target cell from the starting cell, following certain rules.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 219,
    "Topic": "Graph",
    "Problem": "Water Jug problem using BFS",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/water-jug-problem-using-bfs/",
    "Difficulty": "Medium",
    "Description": "Water Jug Problem using BFS: Given two jugs of different capacities and an infinite supply of water, the task is to find the minimum number of steps to measure a certain amount of water using these jugs, using Breadth-First Search (BFS) approach.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 220,
    "Topic": "Graph",
    "Problem": "Water Jug problem using BFS",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/water-jug-problem-using-bfs/",
    "Difficulty": "Medium",
    "Description": "Water Jug Problem using BFS: Given two jugs of different capacities and an infinite supply of water, the task is to find the minimum number of steps to measure a certain amount of water using these jugs, using Breadth-First Search (BFS) approach.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 221,
    "Topic": "Graph",
    "Problem": "Find if there is a path of more thank length from a source",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/find-if-there-is-a-path-of-more-than-k-length-from-a-source/",
    "Difficulty": "Medium",
    "Description": "Find if There is a Path of More Than K Length from a Source: Given an undirected weighted graph and a source vertex, the task is to check if there exists a path from the source vertex to any other vertex with a weight greater than K.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 222,
    "Topic": "Graph",
    "Problem": "M-Colouring",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/m-coloring-problem/0",
    "Difficulty": "Medium",
    "Description": "M-Coloring Problem: Given an undirected graph, the task is to color the vertices of the graph using at most M colors in such a way that no two adjacent vertices have the same color.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 223,
    "Topic": "Graph",
    "Problem": "Minimum edges to reverse o make path from source to destination",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/minimum-edges-reverse-make-path-source-destination/",
    "Difficulty": "Hard",
    "Description": "Minimum Edges to Reverse to Make Path from Source to Destination: Given a directed graph with weighted edges, a source vertex, and a destination vertex, the task is to find the minimum number of edges to be reversed in the graph to create a path from the source to the destination.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 224,
    "Topic": "Graph",
    "Problem": "Paths to travel each nodes using each edge(Seven Bridges)",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/paths-travel-nodes-using-edgeseven-bridges-konigsberg/",
    "Difficulty": "Hard",
    "Description": "Paths to Travel Nodes Using Edges with Even/Odd Weights (Seven Bridges of K�nigsberg): Given a graph representing the famous Seven Bridges of K�nigsberg problem, the task is to find if it is possible to travel through all the edges of the graph exactly once, taking into account the weights (even or odd) of the edges.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 225,
    "Topic": "Graph",
    "Problem": "Vertex Cover ",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/vertex-cover-problem-set-1-introduction-approximate-algorithm-2/",
    "Difficulty": "Medium",
    "Description": "Vertex Cover Problem - Introduction & Approximate Algorithm: Given an undirected graph, the task is to find the minimum size of a vertex cover, which is a subset of vertices that covers all the edges of the graph, using an approximate algorithm.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 226,
    "Topic": "Graph",
    "Problem": "Chinese Postman or Route Inspection",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/chinese-postman-route-inspection-set-1-introduction/",
    "Difficulty": "Hard",
    "Description": "Chinese Postman Route Inspection: This problem involves finding the shortest closed path that covers all edges of a given graph at least once. The goal is to find the minimum possible cost of such a path.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 227,
    "Topic": "Graph",
    "Problem": "Number of Triangles in a Directed and Undirected Graph",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/number-of-triangles-in-directed-and-undirected-graphs/",
    "Difficulty": "Medium",
    "Description": "Number of Triangles in Directed and Undirected Graphs: This problem requires counting the number of triangles (3-node cycles) in a given directed or undirected graph. The task is to come up with an efficient algorithm to calculate the count of triangles in the graph.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 228,
    "Topic": "Graph",
    "Problem": "Minimise the cashflow among a given set of friends who have borrowed money from each other",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/minimize-cash-flow-among-given-set-friends-borrowed-money/",
    "Difficulty": "Hard",
    "Description": "Minimize Cash Flow among Given Set of Friends who have Borrowed Money: This problem involves finding the minimum number of transactions required to settle debts among a group of friends who have borrowed money from each other. The goal is to minimize the total amount of cash flow required to settle all debts.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 229,
    "Topic": "Graph",
    "Problem": "Two Clique",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/two-clique-problem-check-graph-can-divided-two-cliques/",
    "Difficulty": "Hard",
    "Description": "Two Clique Problem - Check If a Graph Can Be Divided Into Two Cliques: This problem involves determining if a given graph can be divided into two disjoint cliques (complete subgraphs) of nodes. The task is to come up with an algorithm that can determine if such a division is possible.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 230,
    "Topic": "Greedy",
    "Problem": "Activity Selection",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/n-meetings-in-one-room/0",
    "Difficulty": "Easy",
    "Description": "N Meetings in One Room: This problem involves scheduling N meetings in a room with a single time slot available for each meeting. The goal is to find the maximum number of meetings that can be scheduled without overlapping.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 231,
    "Topic": "Greedy",
    "Problem": "Job Sequencing",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/job-sequencing-problem/0",
    "Difficulty": "Medium",
    "Description": "Job Sequencing Problem: This problem involves scheduling a set of jobs with different deadlines and profits to be executed on a single machine. The goal is to find the maximum profit that can be obtained by scheduling the jobs within their given deadlines.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 232,
    "Topic": "Greedy",
    "Problem": "Huffman Coding",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/huffman-encoding/0",
    "Difficulty": "Medium",
    "Description": "Huffman Encoding: This problem involves encoding a set of characters into binary codes with varying lengths such that the total encoded length is minimized. The task is to come up with an algorithm that can generate an optimal Huffman encoding for a given set of characters and their frequencies.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 233,
    "Topic": "Greedy",
    "Problem": "Water Connection",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/water-connection-problem/0",
    "Difficulty": "Medium",
    "Description": "Water Connection Problem: This problem involves connecting a set of houses to a water supply source through a network of pipes with different lengths and capacities. The goal is to minimize the cost of connecting all houses to the water supply source.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 234,
    "Topic": "Greedy",
    "Problem": "Fractional Knapsack ",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/fractional-knapsack/0",
    "Difficulty": "Medium",
    "Description": "Fractional Knapsack: This problem involves selecting a set of items with different weights and values to maximize the total value within a given weight constraint. The task is to come up with an algorithm that can find the optimal solution to this problem.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 235,
    "Topic": "Greedy",
    "Problem": "Greedy Algorithm to find Minimum number of Coins",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/coin-piles/0",
    "Difficulty": "Easy",
    "Description": "Coin Piles: This problem involves dividing a set of coins into piles such that the difference between the number of coins in the largest and smallest piles is minimized. The goal is to come up with an algorithm that can distribute the coins optimally to minimize this difference.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 236,
    "Topic": "Greedy",
    "Problem": "Maximum trains for which stoppage can be provided",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/maximum-trains-stoppage-can-provided/",
    "Difficulty": "Medium",
    "Description": "Maximum Trains Stoppage that can be provided: This problem involves finding the maximum number of trains that can be scheduled to stop at a given set of stations, subject to certain constraints on the number of trains that can stop at a station simultaneously.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 237,
    "Topic": "Greedy",
    "Problem": "Minimum Platforms",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/minimum-platforms/0",
    "Difficulty": "Medium",
    "Description": "Minimum Platforms: This problem involves scheduling a set of trains with given arrival and departure times at a railway station. The goal is to find the minimum number of platforms required to accommodate all trains without any overlap in their arrival and departure times.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 238,
    "Topic": "Greedy",
    "Problem": "Buy Maximum Stocks if i stocks can be bought on i-th day",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/buy-maximum-stocks-stocks-can-bought-th-day/",
    "Difficulty": "Medium",
    "Description": "Buy Maximum Stocks if i stocks can be bought on i-th day: This problem involves buying stocks on multiple days with varying stock prices and a limit on the number of stocks that can be bought on each day. The goal is to find the maximum number of stocks that can be bought over a given number of days.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 239,
    "Topic": "Greedy",
    "Problem": "Find the minimum and maximum amount to buy all N candies",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/shop-in-candy-store/0",
    "Difficulty": "Easy",
    "Description": "Shop in Candy Store: This problem involves buying candies from a candy store with different prices for different quantities of candies. The goal is to minimize the cost of buying a certain number of candies by choosing the most optimal quantities.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 240,
    "Topic": "Greedy",
    "Problem": "Minimize Cash Flow among a given set of friends who have borrowed money from each other",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/minimize-cash-flow-among-given-set-friends-borrowed-money/",
    "Difficulty": "Hard",
    "Description": "NOT FOUND",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 241,
    "Topic": "Greedy",
    "Problem": "Minimum Cost to cut a board into squares",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/minimum-cost-cut-board-squares/",
    "Difficulty": "Medium",
    "Description": "Minimum Cost to Cut a Board into Squares: This problem involves cutting a given rectangular board into squares of different sizes with the minimum possible cost. ",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 242,
    "Topic": "Greedy",
    "Problem": "Check if it is possible to survive on Island",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/survival/",
    "Difficulty": "Easy",
    "Description": "Survival: The problem involves determining the survival status of a person based on their skills and available resources in a given scenario, such as a natural disaster, pandemic, or any other adverse situation.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 243,
    "Topic": "Greedy",
    "Problem": "Find maximum meetings in one room",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/find-maximum-meetings-in-one-room/",
    "Difficulty": "Easy",
    "Description": "Find Maximum Meetings in One Room: The problem requires finding the maximum number of non-overlapping meetings that can be scheduled in a single room, given the start and end times of each meeting.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 244,
    "Topic": "Greedy",
    "Problem": "Maximum product subset of an array",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/maximum-product-subset-array/",
    "Difficulty": "Medium",
    "Description": "Maximum Product Subset Array: The problem involves finding the subset of an array with the maximum product of its elements, considering both positive and negative integers.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 245,
    "Topic": "Greedy",
    "Problem": "Maximize array sum after K negations",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/maximize-sum-after-k-negations/0",
    "Difficulty": "Easy",
    "Description": "Maximize Sum After K Negations: The problem requires finding the maximum sum of an array after performing exactly K negations, where each negation can be applied to any element of the array.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 246,
    "Topic": "Greedy",
    "Problem": "Maximize the sum of arr[i]*i",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/maximize-arrii-of-an-array/0",
    "Difficulty": "Easy",
    "Description": "Maximize Arrii of an Array: The problem involves maximizing the sum of array elements with a constraint that no two adjacent elements can be included in the sum.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 247,
    "Topic": "Greedy",
    "Problem": "Maximum sum of absolute difference of an array",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/maximum-sum-absolute-difference-array/",
    "Difficulty": "Easy",
    "Description": "Maximum Sum Absolute Difference Array: The problem requires finding the maximum sum of absolute differences of adjacent elements in an array.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 248,
    "Topic": "Greedy",
    "Problem": "Maximize sum of consecutive differences in a circular array",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/swap-and-maximize/0",
    "Difficulty": "Easy",
    "Description": "Swap and Maximize: The problem involves finding the maximum possible sum of an array after swapping any two elements any number of times.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 249,
    "Topic": "Greedy",
    "Problem": "Minimum sum of absolute difference of pairs of two arrays",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/minimum-sum-absolute-difference-pairs-two-arrays/",
    "Difficulty": "Easy",
    "Description": "Minimum Sum Absolute Difference Pairs in Two Arrays: The problem requires finding the pairs of elements, one from each of two arrays, such that the sum of their absolute differences is minimized.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 250,
    "Topic": "Greedy",
    "Problem": "Program for Shortest Job First (or SJF) CPU Scheduling",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/program-for-shortest-job-first-or-sjf-cpu-scheduling-set-1-non-preemptive/",
    "Difficulty": "Easy",
    "Description": "Program for Shortest Job First (SJF) CPU Scheduling (Non-Preemptive): The problem involves scheduling a set of processes with different burst times on a CPU using the Shortest Job First (SJF) scheduling algorithm without preemption.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 251,
    "Topic": "Greedy",
    "Problem": "Program for Least Recently Used (LRU) Page Replacement algorithm",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/page-faults-in-lru/0",
    "Difficulty": "Medium",
    "Description": "Page Faults in LRU: The problem involves simulating the LRU (Least Recently Used) page replacement algorithm for managing page faults in a computer's memory.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 252,
    "Topic": "Greedy",
    "Problem": "Smallest subset with sum greater than all other elements",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/smallest-subset-sum-greater-elements/",
    "Difficulty": "Easy",
    "Description": "Smallest Subset Sum Greater than All Other Elements: The problem requires finding the smallest subset sum of an array that is greater than the sum of all the other elements in the array.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 253,
    "Topic": "Greedy",
    "Problem": "Chocolate Distribution ",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/chocolate-distribution-problem/0",
    "Difficulty": "Easy",
    "Description": "Chocolate Distribution Problem: The problem involves distributing m chocolates among n students in such a way that the difference between the number of chocolates with the student having the maximum chocolates and the student having the minimum chocolates is minimized.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 254,
    "Topic": "Greedy",
    "Problem": "DEFKIN -Defense of a Kingdom",
    "Done": false,
    "URL": "https://www.spoj.com/problems/DEFKIN/",
    "Difficulty": "Medium",
    "Description": "DEFKIN: The problem involves finding the area of the rectangle that can be formed by placing points in a 2D plane in a specific pattern.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 255,
    "Topic": "Greedy",
    "Problem": "DIEHARD -DIE HARD",
    "Done": false,
    "URL": "https://www.spoj.com/problems/DIEHARD/",
    "Difficulty": "Medium",
    "Description": "DIEHARD: The problem involves finding the maximum time a person can survive in a game given certain rules and constraints.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 256,
    "Topic": "Greedy",
    "Problem": "GERGOVIA -Wine trading in Gergovia",
    "Done": false,
    "URL": "https://www.spoj.com/problems/GERGOVIA/",
    "Difficulty": "Medium",
    "Description": "GERGOVIA: The problem involves finding the minimum cost of redistributing wine bottles among houses in a town to achieve a balanced distribution.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 257,
    "Topic": "Greedy",
    "Problem": "Picking Up Chicks",
    "Done": false,
    "URL": "https://www.spoj.com/problems/GCJ101BB/",
    "Difficulty": "Hard",
    "Description": "GCJ101BB: The problem involves finding the maximum possible sum of a subarray of a given array with a constraint on the length of the subarray.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 258,
    "Topic": "Greedy",
    "Problem": "CHOCOLA –Chocolate",
    "Done": false,
    "URL": "https://www.spoj.com/problems/CHOCOLA/",
    "Difficulty": "Easy",
    "Description": "CHOCOLA: The problem involves finding the minimum cost of breaking a chocolate bar into smaller pieces using a specific technique.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 259,
    "Topic": "Greedy",
    "Problem": "ARRANGE -Arranging Amplifiers",
    "Done": false,
    "URL": "https://www.spoj.com/problems/ARRANGE/",
    "Difficulty": "Medium",
    "Description": "ARRANGE: The problem involves rearranging a given array in a specific way to minimize the sum of product of adjacent elements.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 260,
    "Topic": "Greedy",
    "Problem": "K Centers",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/k-centers-problem-set-1-greedy-approximate-algorithm/",
    "Difficulty": "Medium",
    "Description": "K-Centers Problem (Greedy Approximate Algorithm): The problem involves finding the optimal location of k centers in a graph to minimize the maximum distance between each node and its nearest center.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 261,
    "Topic": "Greedy",
    "Problem": "Minimum Cost of ropes",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/minimum-cost-of-ropes/0",
    "Difficulty": "Medium",
    "Description": "Minimum Cost of Ropes: The problem involves finding the minimum cost of connecting ropes of different lengths to form a single rope.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 262,
    "Topic": "Greedy",
    "Problem": "Find smallest number with given number of digits and sum of digits",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/smallest-number5829/1",
    "Difficulty": "Medium",
    "Description": "Smallest Number: The problem involves finding the smallest number that can be formed by rearranging the digits of a given number.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 263,
    "Topic": "Greedy",
    "Problem": "Rearrange characters in a string such that no two adjacent are same",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/rearrange-characters/0",
    "Difficulty": "Medium",
    "Description": "Rearrange Characters: The problem involves rearranging the characters of a string in such a way that no two adjacent characters are the same.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 264,
    "Topic": "Greedy",
    "Problem": "Find maximum sum possible equal sum of three stacks",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/find-maximum-sum-possible-equal-sum-three-stacks/",
    "Difficulty": "Medium",
    "Description": "Find Maximum Sum Possible by Equal Sum of Three Stacks: The problem involves finding the",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 265,
    "Topic": "Heap",
    "Problem": "Implement a Maxheap/MinHeap using arrays and recursion.",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/building-heap-from-array/",
    "Difficulty": "Medium",
    "Description": "Building heap from array: The problem involves building a heap data structure from an array of elements. The array is given as input, and the task is to rearrange the elements in the array such that they satisfy the heap property, either min heap or max heap property.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 266,
    "Topic": "Heap",
    "Problem": "Sort an Array using heap. (HeapSort)",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/heap-sort/",
    "Difficulty": "Medium",
    "Description": "Heap Sort: The problem involves sorting an array of elements using the heap sort algorithm. The input is an unsorted array, and the task is to rearrange the elements in the array in ascending or descending order using the heap sort algorithm.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 267,
    "Topic": "Heap",
    "Problem": "Maximum of all subarrays of size k.",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/sliding-window-maximum-maximum-of-all-subarrays-of-size-k/",
    "Difficulty": "Medium",
    "Description": "Sliding Window Maximum: The problem involves finding the maximum element in all subarrays of size k in an array. The input is an array of integers and an integer k, and the task is to find the maximum element in each subarray of size k and return it as an array.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 268,
    "Topic": "Heap",
    "Problem": "“k” largest element in an array",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/k-largest-elements4206/1",
    "Difficulty": "Easy",
    "Description": "K Largest Elements: The problem involves finding the k largest elements in an array of integers. The input is an array of integers and an integer k, and the task is to find the k largest elements in the array and return them as an array or list.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 269,
    "Topic": "Heap",
    "Problem": "Kth smallest and largest element in an unsorted array",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/kth-smallestlargest-element-unsorted-array/",
    "Difficulty": "Medium",
    "Description": "Kth Smallest/Largest Element in an Unsorted Array: The problem involves finding the kth smallest or largest element in an unsorted array of integers. The input is an array of integers and an integer k, and the task is to find the kth smallest or largest element in the array and return it.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 270,
    "Topic": "Heap",
    "Problem": "Merge “K” sorted arrays. [ IMP ]",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/merge-k-sorted-arrays/1",
    "Difficulty": "Medium",
    "Description": "Merge K Sorted Arrays: The problem involves merging k sorted arrays into a single sorted array. The input is k sorted arrays, and the task is to merge them into a single sorted array and return it.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 271,
    "Topic": "Heap",
    "Problem": "Merge 2 Binary Max Heaps",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/merge-two-binary-max-heap/0",
    "Difficulty": "Medium",
    "Description": "Merge Two Binary Max Heaps: The problem involves merging two binary max heaps into a single binary max heap. The input is two binary max heaps represented as arrays or linked structures, and the task is to merge them into a single binary max heap and return it.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 272,
    "Topic": "Heap",
    "Problem": "Kth largest sum continuous subarrays",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/k-th-largest-sum-contiguous-subarray/",
    "Difficulty": "Hard",
    "Description": "Kth Largest Sum Contiguous Subarray: The problem involves finding the kth largest sum of contiguous subarrays in an array of integers. The input is an array of integers and an integer k, and the task is to find the kth largest sum of contiguous subarrays in the array and return it.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 273,
    "Topic": "Heap",
    "Problem": "Leetcode- reorganize strings",
    "Done": false,
    "URL": "https://leetcode.com/problems/reorganize-string/",
    "Difficulty": "Hard",
    "Description": "Reorganize String: The problem involves reorganizing a string such that no two adjacent characters are the same. The input is a string, and the task is to rearrange the characters in the string such that no two adjacent characters are the same, if possible, and return the rearranged string.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 274,
    "Topic": "Heap",
    "Problem": "Merge “K” Sorted Linked Lists [V.IMP]",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/merge-k-sorted-linked-lists/1",
    "Difficulty": "Medium",
    "Description": "Merge K Sorted Linked Lists: The problem involves merging k sorted linked lists into a single sorted linked list. The input is k sorted linked lists, and the task is to merge them into a single sorted linked list and return it.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 275,
    "Topic": "Heap",
    "Problem": "Smallest range in “K” Lists",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/find-smallest-range-containing-elements-from-k-lists/1",
    "Difficulty": "Easy",
    "Description": "Find Smallest Range Containing Elements from K Lists: The problem involves finding the smallest range that contains at least one element from k sorted lists. The input is k sorted lists, and the task is to find the smallest range that contains at least one element from each list and return it.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 276,
    "Topic": "Heap",
    "Problem": "Median in a stream of Integers",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/find-median-in-a-stream/0",
    "Difficulty": "Medium",
    "Description": "Find Median in a Stream: The problem involves finding the median of a stream of integers. The input is a stream of integers, and the task is to find the median of the stream at any given point in time.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 277,
    "Topic": "Heap",
    "Problem": "Check if a Binary Tree is Heap",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/is-binary-tree-heap/1",
    "Difficulty": "Easy",
    "Description": "Is Binary Tree Heap: The problem involves checking if a binary tree is a valid heap or not. The input is a binary tree, and the task is to check if it satisfies the heap property, either min heap or max heap property.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 278,
    "Topic": "Heap",
    "Problem": "Connect “n” ropes with minimum cost",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/minimum-cost-of-ropes/0",
    "Difficulty": "Medium",
    "Description": "Minimum Cost of Ropes: The problem involves finding the minimum cost to connect n ropes of different lengths into a single rope. The input is an array of n rope lengths, and the task is to find the minimum cost to connect them into a single",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 279,
    "Topic": "Heap",
    "Problem": "Convert BST to Min Heap",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/convert-bst-min-heap/",
    "Difficulty": "Medium",
    "Description": "Convert Binary Search Tree (BST) to Min Heap: The problem involves converting a given BST to a min heap such that the resulting binary tree satisfies the heap property, where each node has a value less than or equal to its children.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 280,
    "Topic": "Heap",
    "Problem": "Convert min heap to max heap",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/convert-min-heap-to-max-heap/",
    "Difficulty": "Easy",
    "Description": "Convert Min Heap to Max Heap: The problem requires converting a given min heap to a max heap, where the resulting binary tree satisfies the heap property, with each node having a value greater than or equal to its children.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 281,
    "Topic": "Heap",
    "Problem": "Rearrange characters in a string such that no two adjacent are same.",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/rearrange-characters/0",
    "Difficulty": "Medium",
    "Description": "Rearrange Characters: The problem involves rearranging the characters of a given string such that no two adjacent characters are the same.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 282,
    "Topic": "Heap",
    "Problem": "Minimum sum of two numbers formed from digits of an array",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/minimum-sum4058/1",
    "Difficulty": "Easy",
    "Description": "Minimum Sum: The problem requires finding the minimum sum of elements in an array of integers with given constraints.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 283,
    "Topic": "LinkedList",
    "Problem": "Write a Program to reverse the Linked List. (Both Iterative and recursive)",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/reverse-a-linked-list/",
    "Difficulty": "Medium",
    "Description": "Reverse a Linked List: The problem involves reversing a given linked list, where each node has a reference to its next node in the list.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 284,
    "Topic": "LinkedList",
    "Problem": "Reverse a Linked List in group of Given Size. [Very Imp]",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/reverse-a-linked-list-in-groups-of-given-size/1",
    "Difficulty": "Easy",
    "Description": "Reverse a Linked List in Groups of Given Size: The problem requires reversing a given linked list in groups of a given size, where each group of nodes is reversed separately.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 285,
    "Topic": "LinkedList",
    "Problem": "Write a program to Detect loop in a linked list.",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/detect-loop-in-linked-list/1",
    "Difficulty": "Easy",
    "Description": "Detect Loop in Linked List: The problem involves detecting if a given linked list contains a loop or not.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 286,
    "Topic": "LinkedList",
    "Problem": "Write a program to Delete loop in a linked list.",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/remove-loop-in-linked-list/1",
    "Difficulty": "Easy",
    "Description": "Remove Loop in Linked List: The problem requires removing the loop from a given linked list, if it contains any.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 287,
    "Topic": "LinkedList",
    "Problem": "Find the starting point of the loop. ",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/find-first-node-of-loop-in-a-linked-list/",
    "Difficulty": "Easy",
    "Description": "Find First Node of Loop in a Linked List: The problem involves finding the first node of a loop in a given linked list.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 288,
    "Topic": "LinkedList",
    "Problem": "Remove Duplicates in a sorted Linked List.",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/remove-duplicate-element-from-sorted-linked-list/1",
    "Difficulty": "Easy",
    "Description": "Remove Duplicate Element from Sorted Linked List: The problem requires removing duplicate elements from a sorted linked list, retaining only distinct elements.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 289,
    "Topic": "LinkedList",
    "Problem": "Remove Duplicates in a Un-sorted Linked List.",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/remove-duplicates-from-an-unsorted-linked-list/1",
    "Difficulty": "Medium",
    "Description": "Remove Duplicates from an Unsorted Linked List: The problem involves removing duplicate elements from an unsorted linked list, retaining only distinct elements.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 290,
    "Topic": "LinkedList",
    "Problem": "Write a Program to Move the last element to Front in a Linked List.",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/move-last-element-to-front-of-a-given-linked-list/",
    "Difficulty": "Easy",
    "Description": "Move Last Element to Front of a Given Linked List: The problem requires moving the last element of a given linked list to the front, while maintaining the relative order of other elements.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 291,
    "Topic": "LinkedList",
    "Problem": "Add “1” to a number represented as a Linked List.",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/add-1-to-a-number-represented-as-linked-list/1",
    "Difficulty": "Medium",
    "Description": "Add 1 to a Number Represented as Linked List: The problem involves adding 1 to a number represented as a linked list, where each node represents a digit.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 292,
    "Topic": "LinkedList",
    "Problem": "Add two numbers represented by linked lists.",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/add-two-numbers-represented-by-linked-lists/1",
    "Difficulty": "Medium",
    "Description": "Add Two Numbers Represented by Linked Lists: The problem requires adding two numbers represented as linked lists, where each node represents a digit.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 293,
    "Topic": "LinkedList",
    "Problem": "Intersection of two Sorted Linked List.",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/intersection-of-two-sorted-linked-lists/1",
    "Difficulty": "Medium",
    "Description": "Intersection of Two Sorted Linked Lists: The problem involves finding the intersection of two sorted linked lists and returning a new linked list containing common elements.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 294,
    "Topic": "LinkedList",
    "Problem": "Intersection Point of two Linked Lists.",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/intersection-point-in-y-shapped-linked-lists/1",
    "Difficulty": "Easy",
    "Description": "Intersection Point in Y-Shaped Linked Lists: The problem requires finding the intersection point of two Y-shaped linked lists.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 295,
    "Topic": "LinkedList",
    "Problem": "Merge Sort For Linked lists.[Very Important]",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/sort-a-linked-list/1",
    "Difficulty": "Easy",
    "Description": "Sort a Linked List: The problem involves sorting a given linked list in ascending order.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 296,
    "Topic": "LinkedList",
    "Problem": "Quicksort for Linked Lists.[Very Important]",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/quick-sort-on-linked-list/1",
    "Difficulty": "Easy",
    "Description": "Quick Sort on Linked List: The problem involves implementing the Quick Sort algorithm on a given linked list.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 297,
    "Topic": "LinkedList",
    "Problem": "Find the middle Element of a linked list.",
    "Done": false,
    "URL": "https://leetcode.com/problems/middle-of-the-linked-list/",
    "Difficulty": "Medium",
    "Description": "Middle of the Linked List: The problem requires finding the middle node of a given linked list.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 298,
    "Topic": "LinkedList",
    "Problem": "Check if a linked list is a circular linked list.",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/circular-linked-list/1",
    "Difficulty": "Easy",
    "Description": "Circular Linked List: The problem involves determining if a given linked list is circular, i.e., if it contains a loop.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 299,
    "Topic": "LinkedList",
    "Problem": "Split a Circular linked list into two halves.",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/split-a-circular-linked-list-into-two-halves/1",
    "Difficulty": "Easy",
    "Description": "Split a Circular Linked List into Two Halves: The problem requires splitting a circular linked list into two halves, where each half forms a separate circular linked list.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 300,
    "Topic": "LinkedList",
    "Problem": "Write a Program to check whether the Singly Linked list is a palindrome or not.",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/check-if-linked-list-is-pallindrome/1",
    "Difficulty": "Easy",
    "Description": "Check if Linked List is Palindrome: The problem involves determining if a given linked list is a palindrome, i.e., it reads the same forwards and backwards.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 301,
    "Topic": "LinkedList",
    "Problem": "Deletion from a Circular Linked List.",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/deletion-circular-linked-list/",
    "Difficulty": "Medium",
    "Description": "Deletion in Circular Linked List: The problem involves deleting a node from a circular linked list based on a given condition.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 302,
    "Topic": "LinkedList",
    "Problem": "Reverse a Doubly Linked list.",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/reverse-a-doubly-linked-list/1",
    "Difficulty": "Hard",
    "Description": "Reverse a Doubly Linked List: The problem requires reversing a given doubly linked list, where each node has references to its next and previous nodes in the list.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 303,
    "Topic": "LinkedList",
    "Problem": "Find pairs with a given sum in a DLL.",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/find-pairs-given-sum-doubly-linked-list/",
    "Difficulty": "Easy",
    "Description": "Find Pairs with Given Sum in Doubly Linked List: The problem involves finding pairs of nodes in a doubly linked list that have a given sum",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 304,
    "Topic": "LinkedList",
    "Problem": "Count triplets in a sorted DLL whose sum is equal to given value “X”.",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/count-triplets-sorted-doubly-linked-list-whose-sum-equal-given-value-x/",
    "Difficulty": "Medium",
    "Description": "Count Triplets in a Sorted Doubly Linked List Whose Sum is Equal to a Given Value x: The problem involves finding all triplets in a sorted doubly linked list whose sum is equal to a given value x.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 305,
    "Topic": "LinkedList",
    "Problem": "Sort a “k”sorted Doubly Linked list.[Very IMP]",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/sort-k-sorted-doubly-linked-list/",
    "Difficulty": "Medium",
    "Description": "Sort a K-Sorted Doubly Linked List: The problem requires sorting a doubly linked list that is partially sorted, where each element is at most k positions away from its sorted position.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 306,
    "Topic": "LinkedList",
    "Problem": "Rotate DoublyLinked list by N nodes.",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/rotate-doubly-linked-list-n-nodes/",
    "Difficulty": "Easy",
    "Description": "Rotate a Doubly Linked List by N Nodes: The problem involves rotating a doubly linked list by N nodes in clockwise direction.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 307,
    "Topic": "LinkedList",
    "Problem": "Rotate a Doubly Linked list in group of Given Size.[Very IMP]",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/reverse-doubly-linked-list-groups-given-size/",
    "Difficulty": "Hard",
    "Description": "Reverse a Doubly Linked List in Groups of Given Size: The problem requires reversing a doubly linked list in groups of given size.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 308,
    "Topic": "LinkedList",
    "Problem": "Flatten a Linked List",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/flattening-a-linked-list/1",
    "Difficulty": "Medium",
    "Description": "Flatten a Linked List: The problem involves flattening a linked list where each node has a down pointer pointing to another linked list.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 309,
    "Topic": "LinkedList",
    "Problem": "Sort a LL of 0's, 1's and 2's",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/given-a-linked-list-of-0s-1s-and-2s-sort-it/1",
    "Difficulty": "Easy",
    "Description": "Sort a Linked List of 0s, 1s, and 2s: The problem requires sorting a linked list that contains only 0s, 1s, and 2s in ascending order.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 310,
    "Topic": "LinkedList",
    "Problem": "Clone a linked list with next and random pointer",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/clone-a-linked-list-with-next-and-random-pointer/1",
    "Difficulty": "Medium",
    "Description": "Clone a Linked List with Next and Random Pointer: The problem involves cloning a linked list that contains both next and random pointers.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 311,
    "Topic": "LinkedList",
    "Problem": "Merge K sorted Linked list",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/merge-k-sorted-linked-lists/1",
    "Difficulty": "Medium",
    "Description": "Merge K Sorted Linked Lists: The problem requires merging k sorted linked lists into a single sorted linked list.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 312,
    "Topic": "LinkedList",
    "Problem": "Multiply 2 no. represented by LL",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/multiply-two-linked-lists/1",
    "Difficulty": "Easy",
    "Description": "Multiply Two Linked Lists: The problem involves multiplying two linked lists that represent two integers and returning the result as a linked list.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 313,
    "Topic": "LinkedList",
    "Problem": "Delete nodes which have a greater value on right side",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/delete-nodes-having-greater-value-on-right/1",
    "Difficulty": "Medium",
    "Description": "Delete Nodes Having Greater Value on Right: The problem requires deleting nodes from a linked list that have a greater value on the right side.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 314,
    "Topic": "LinkedList",
    "Problem": "Segregate even and odd nodes in a Linked List",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/segregate-even-and-odd-nodes-in-a-linked-list/0",
    "Difficulty": "Medium",
    "Description": "Segregate Even and Odd Nodes in a Linked List: The problem involves segregating even and odd nodes in a linked list, such that all even nodes appear before odd nodes.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 315,
    "Topic": "LinkedList",
    "Problem": "Program for n’th node from the end of a Linked List",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/nth-node-from-end-of-linked-list/1",
    "Difficulty": "Medium",
    "Description": "Nth Node from End of Linked List: The problem involves finding the Nth node from the end of a linked list.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 316,
    "Topic": "LinkedList",
    "Problem": "Find the first non-repeating character from a stream of characters",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/first-non-repeating-character-in-a-stream/0",
    "Difficulty": "Medium",
    "Description": "First Non-Repeating Character in a Stream: The problem requires finding the first non-repeating character in a stream of characters.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 317,
    "Topic": "Matrix",
    "Problem": "Spiral traversal on a Matrix",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/spirally-traversing-a-matrix/0",
    "Difficulty": "Medium",
    "Description": "Spirally Traversing a Matrix: The problem involves traversing a matrix in a spiral order.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 318,
    "Topic": "Matrix",
    "Problem": "Search an element in a matriix",
    "Done": false,
    "URL": "https://leetcode.com/problems/search-a-2d-matrix/",
    "Difficulty": "Easy",
    "Description": "Search a 2D Matrix: The problem requires searching for a target value in a sorted 2D matrix.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 319,
    "Topic": "Matrix",
    "Problem": "Find median in a row wise sorted matrix",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/median-in-a-row-wise-sorted-matrix1527/1",
    "Difficulty": "Hard",
    "Description": "Median in a Row-Wise Sorted Matrix: The problem involves finding the median of a row-wise sorted matrix.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 320,
    "Topic": "Matrix",
    "Problem": "Find row with maximum no. of 1's",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/row-with-max-1s0023/1",
    "Difficulty": "Hard",
    "Description": "Row with Maximum 1s: The problem requires finding the row with the maximum number of 1s in a binary matrix.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 321,
    "Topic": "Matrix",
    "Problem": "Print elements in sorted order using row-column wise sorted matrix",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/sorted-matrix/0",
    "Difficulty": "Medium",
    "Description": "Sorted Matrix: The problem requires checking if a matrix is sorted in non-decreasing order.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 322,
    "Topic": "Matrix",
    "Problem": "Maximum size rectangle",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/max-rectangle/1",
    "Difficulty": "Medium",
    "Description": "Max Rectangle: The problem involves finding the maximum rectangle area in a binary matrix.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 323,
    "Topic": "Matrix",
    "Problem": "Find a specific pair in matrix",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/find-a-specific-pair-in-matrix/",
    "Difficulty": "Medium",
    "Description": "Find a Specific Pair in a Matrix: The problem involves finding a specific pair of elements in a matrix such that their sum is maximum and both elements are in the same row or column.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 324,
    "Topic": "Matrix",
    "Problem": "Rotate matrix by 90 degrees",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/rotate-a-matrix-by-90-degree-in-clockwise-direction-without-using-any-extra-space/",
    "Difficulty": "Easy",
    "Description": "Rotate a Matrix by 90 Degrees in Clockwise Direction Without Using Any Extra Space: The problem involves rotating a matrix by 90 degrees in clockwise direction without using any extra space.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 325,
    "Topic": "Matrix",
    "Problem": "Kth smallest element in a row-cpumn wise sorted matrix",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/kth-element-in-matrix/1",
    "Difficulty": "Easy",
    "Description": "Kth Element in Matrix: The problem involves finding the Kth smallest element in a matrix that is sorted row-wise and column-wise.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 326,
    "Topic": "Matrix",
    "Problem": "Common elements in all rows of a given matrix",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/common-elements-in-all-rows-of-a-given-matrix/",
    "Difficulty": "Medium",
    "Description": "Common Elements in All Rows of a Given Matrix: The problem requires finding the common elements in all rows of a given matrix.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 327,
    "Topic": "Searching & Sorting",
    "Problem": "Find first and last positions of an element in a sorted array",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/first-and-last-occurrences-of-x/0",
    "Difficulty": "Easy",
    "Description": "First and Last Occurrences of X: The problem involves finding the first and last occurrences of a given element X in a sorted array.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 328,
    "Topic": "Searching & Sorting",
    "Problem": "Find a Fixed Point (Value equal to index) in a given array",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/value-equal-to-index-value1330/1",
    "Difficulty": "Easy",
    "Description": "Value Equal to Index Value: The problem involves finding the elements in an array whose value is equal to its index value.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 329,
    "Topic": "Searching & Sorting",
    "Problem": "Search in a rotated sorted array",
    "Done": false,
    "URL": "https://leetcode.com/problems/search-in-rotated-sorted-array/",
    "Difficulty": "Hard",
    "Description": "Search in Rotated Sorted Array: The problem involves searching for a target value in a rotated sorted array.Count Squares: This problem involves counting the number of perfect squares in a given range of numbers. The task is to write a program that takes an integer input representing the upper limit of the range, and calculates the count of perfect squares from 1 to that limit.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 330,
    "Topic": "Searching & Sorting",
    "Problem": "square root of an integer",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/count-squares3649/1",
    "Difficulty": "Medium",
    "Description": "Given a binary matrix of size N x N, the task is to count the number of squares present in the matrix. A square can be formed using 1s only, and its side length can be any positive integer.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 331,
    "Topic": "Searching & Sorting",
    "Problem": "Maximum and minimum of an array using minimum number of comparisons",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/middle-of-three2926/1",
    "Difficulty": "Medium",
    "Description": "Middle of Three: Given three integers, the task is to find the middle element among them. The program takes three integer inputs and returns the middle element.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 332,
    "Topic": "Searching & Sorting",
    "Problem": "Optimum location of point to minimize total distance",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/optimum-location-point-minimize-total-distance/",
    "Difficulty": "Easy",
    "Description": "Optimum Location Point to Minimize Total Distance: This problem involves finding the optimum location point in a 2D plane, such that the total distance from this point to a set of given points is minimized. The task is to write a program that takes input the coordinates of the given points and calculates the coordinates of the optimum location point.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 333,
    "Topic": "Searching & Sorting",
    "Problem": "Find the repeating and the missing",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/find-missing-and-repeating2512/1",
    "Difficulty": "Easy",
    "Description": "Find Missing and Repeating: Given an array of integers from 1 to N, where one element is missing and one element is repeating, the task is to find the missing and repeating elements. The program takes an array of integers as input and returns the missing and repeating elements.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 334,
    "Topic": "Searching & Sorting",
    "Problem": "find majority element",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/majority-element/0",
    "Difficulty": "Medium",
    "Description": "Majority Element: Given an array of integers, the task is to find the majority element, i.e., the element that appears more than N/2 times in the array, where N is the size of the array. The program takes an array of integers as input and returns the majority element.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 335,
    "Topic": "Searching & Sorting",
    "Problem": "Searching in an array where adjacent differ by at most k",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/searching-array-adjacent-differ-k/",
    "Difficulty": "Medium",
    "Description": "Searching in an Array with Adjacent Difference of K: Given a sorted array of integers with adjacent elements differing by at most K, the task is to search for a given element in the array. The program takes an array of integers, the element to be searched, and the value of K as input, and returns the index of the element if found, or -1 if not found.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 336,
    "Topic": "Searching & Sorting",
    "Problem": "find a pair with a given difference",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/find-pair-given-difference/0",
    "Difficulty": "Medium",
    "Description": "Find Pair with Given Difference: Given an array of integers and a target difference, the task is to find a pair of elements in the array whose difference is equal to the given target difference. The program takes an array of integers and the target difference as input and returns the pair of elements if found, or -1 if not found.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 337,
    "Topic": "Searching & Sorting",
    "Problem": "find four elements that sum to a given value",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/find-all-four-sum-numbers/0",
    "Difficulty": "Medium",
    "Description": "Find All Four Sum Numbers: Given an array of integers and a target sum, the task is to find all quadruplets in the array that add up to the given sum. The program takes an array of integers and the target sum as input and returns all the quadruplets if found, or -1 if not found.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 338,
    "Topic": "Searching & Sorting",
    "Problem": "maximum sum such that no 2 elements are adjacent",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/stickler-theif/0",
    "Difficulty": "Medium",
    "Description": "Stickler Thief: The task is to find the maximum sum of an array of integers, such that no two adjacent elements are included in the sum. The program takes an array of integers as input and returns the maximum sum.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 339,
    "Topic": "Searching & Sorting",
    "Problem": "Count triplet with sum smaller than a given value",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/count-triplets-with-sum-smaller-than-x5549/1",
    "Difficulty": "Easy",
    "Description": "Count Triplets with Sum Smaller Than X: Given an array of integers and a target sum, the task is to find the count of triplets in the array whose sum is smaller than the given target sum. The program takes an array of integers and the target sum as input and returns the count of triplets.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 340,
    "Topic": "Searching & Sorting",
    "Problem": "merge 2 sorted arrays",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/merge-two-sorted-arrays5135/1",
    "Difficulty": "Easy",
    "Description": "Merge Two Sorted Arrays: Given two sorted arrays of integers, the task is to merge them into a single sorted array without using extra space. The program takes two sorted arrays of integers as input and returns the merged sorted array.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 341,
    "Topic": "Searching & Sorting",
    "Problem": "print all subarrays with 0 sum",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/zero-sum-subarrays/0",
    "Difficulty": "Medium",
    "Description": "Zero Sum Subarrays: Given an array of integers, the task is to find the count of subarrays whose sum is equal to zero. The program takes an array of integers as input and returns the count of zero sum subarrays.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 342,
    "Topic": "Searching & Sorting",
    "Problem": "Product array Puzzle",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/product-array-puzzle/0",
    "Difficulty": "Easy",
    "Description": "Product Array Puzzle: Given an array of integers, the task is to find the product of all elements in the array except the current element without using the division operator. The program takes an array of integers as input and returns the product array.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 343,
    "Topic": "Searching & Sorting",
    "Problem": "Sort array according to count of set bits",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/sort-by-set-bit-count/0",
    "Difficulty": "Medium",
    "Description": "\"Minimum Swaps\" - This problem requires finding the minimum number of swaps needed to sort an array of integers in ascending order.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 344,
    "Topic": "Searching & Sorting",
    "Problem": "minimum no. of swaps required to sort the array",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/minimum-swaps/1",
    "Difficulty": "Medium",
    "Description": "\"Bishu and Soldiers\" - The problem involves finding the sum of the strength of soldiers with strength less than or equal to a given value in an array of soldiers, where each soldier has a unique strength.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 345,
    "Topic": "Searching & Sorting",
    "Problem": "Bishu and Soldiers",
    "Done": false,
    "URL": "https://www.hackerearth.com/practice/algorithms/searching/binary-search/practice-problems/algorithm/bishu-and-soldiers/",
    "Difficulty": "Medium",
    "Description": "\"Rasta and Kheshtak\" - The problem requires finding the number of elements in an array that are greater than or equal to a given value and have a specific property related to their position in the array.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 346,
    "Topic": "Searching & Sorting",
    "Problem": "Rasta and Kheshtak",
    "Done": false,
    "URL": "https://www.hackerearth.com/practice/algorithms/searching/binary-search/practice-problems/algorithm/rasta-and-kheshtak/",
    "Difficulty": "Medium",
    "Description": "\"Kth Smallest Number Again\" - This problem involves finding the kth smallest number in an array of integers, where the array is divided into segments and only certain segments need to be considered.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 347,
    "Topic": "Searching & Sorting",
    "Problem": "Kth smallest number again",
    "Done": false,
    "URL": "https://www.hackerearth.com/practice/algorithms/searching/binary-search/practice-problems/algorithm/kth-smallest-number-again-2/",
    "Difficulty": "Medium",
    "Description": "\"Find Pivot Element in Sorted Rotated Array\" - The problem requires finding the pivot element in a sorted and rotated array, which is the element that divides the array into two sorted subarrays.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 348,
    "Topic": "Searching & Sorting",
    "Problem": "Find pivot element in a sorted array",
    "Done": false,
    "URL": "http://theoryofprogramming.com/2017/12/16/find-pivot-element-sorted-rotated-array/",
    "Difficulty": "Hard",
    "Description": "\"K-th Element of Two Sorted Arrays\" - This problem requires finding the kth element when two sorted arrays are merged into a single sorted array.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 349,
    "Topic": "Searching & Sorting",
    "Problem": "K-th Element of Two Sorted Arrays",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/k-th-element-of-two-sorted-array/0",
    "Difficulty": "Hard",
    "Description": "\"AGGRCOW\" - The problem involves placing cows in stalls with varying distances between them such that the maximum distance between any two cows is minimized.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 350,
    "Topic": "Searching & Sorting",
    "Problem": "Aggressive cows",
    "Done": false,
    "URL": "https://www.spoj.com/problems/AGGRCOW/",
    "Difficulty": "Hard",
    "Description": "NOT FOUND",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 351,
    "Topic": "Searching & Sorting",
    "Problem": "Book Allocation",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/allocate-minimum-number-of-pages/0",
    "Difficulty": "Easy",
    "Description": "\"Allocate Minimum Number of Pages\" - The problem involves allocating pages of a book to students with varying reading capacities such that the maximum number of pages assigned to a student is minimized.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 352,
    "Topic": "Searching & Sorting",
    "Problem": "EKOSPOJ:",
    "Done": false,
    "URL": "https://www.spoj.com/problems/EKO/",
    "Difficulty": "Medium",
    "Description": "\"EKO\" - This problem requires finding the height at which a tree should be cut to obtain a specific amount of wood, given the heights of different sections of the tree.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 353,
    "Topic": "Searching & Sorting",
    "Problem": "Job Scheduling Algo",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/weighted-job-scheduling-log-n-time/",
    "Difficulty": "Hard",
    "Description": "Weighted Job Scheduling\" - The problem involves scheduling jobs with different weights and durations such that the total weight of jobs scheduled is maximized, subject to certain constraints.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 354,
    "Topic": "Searching & Sorting",
    "Problem": "Missing Number in AP",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/arithmetic-number/0",
    "Difficulty": "Medium",
    "Description": "\"Arithmetic Number\" - This problem requires finding the nth arithmetic number, which is a number that has exactly n distinct prime factors.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 355,
    "Topic": "Searching & Sorting",
    "Problem": "Smallest number with atleastn trailing zeroes infactorial",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/smallest-factorial-number5929/1",
    "Difficulty": "Medium",
    "Description": "\"Smallest Factorial Number\" - The problem involves finding the smallest number that can be expressed as the product of two or more distinct factorial numbers.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 356,
    "Topic": "Searching & Sorting",
    "Problem": "Painters Partition",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/allocate-minimum-number-of-pages/0",
    "Difficulty": "Medium",
    "Description": "\"Allocate Minimum Number of Pages\" - The problem involves allocating pages of a book to students with varying reading capacities such that the maximum number of pages assigned to a student is minimized.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 357,
    "Topic": "Searching & Sorting",
    "Problem": "ROTI-Prata SPOJ",
    "Done": false,
    "URL": "https://www.spoj.com/problems/PRATA/",
    "Difficulty": "Medium",
    "Description": "PRATA (Spoj): The problem requires finding the minimum time required to cook 'p' pratas, given 'n' chefs with varying cooking speeds. Each chef can only cook one prata at a time, and the pratas must be cooked sequentially with increasing cooking time. The task is to find the minimum time required to cook 'p' pratas.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 358,
    "Topic": "Searching & Sorting",
    "Problem": "DoubleHelix SPOJ",
    "Done": false,
    "URL": "https://www.spoj.com/problems/ANARC05B/",
    "Difficulty": "Hard",
    "Description": "ANARC05B (Spoj): The problem involves finding the maximum sum of a subsequence from two given arrays such that no two elements are from the same array and the subsequence is sorted in ascending order.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 359,
    "Topic": "Searching & Sorting",
    "Problem": "Subset Sums",
    "Done": false,
    "URL": "https://www.spoj.com/problems/SUBSUMS/",
    "Difficulty": "Hard",
    "Description": "SUBSUMS (Spoj): The problem involves finding the number of subarrays with a sum within a given range. Given an array of integers and two integers 'x' and 'y', the task is to find the count of subarrays whose sum lies between 'x' and 'y' (inclusive).",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 360,
    "Topic": "Searching & Sorting",
    "Problem": "Findthe inversion count",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/inversion-of-array/0",
    "Difficulty": "Medium",
    "Description": "Inversion of Array (GeeksforGeeks): The problem requires counting the number of inversions in an array. An inversion occurs when two elements in an array are out of their sorted order.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 361,
    "Topic": "Searching & Sorting",
    "Problem": "Implement Merge-sort in-place",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/in-place-merge-sort/",
    "Difficulty": "Easy",
    "Description": "In-place Merge Sort (GeeksforGeeks): The problem involves implementing the Merge Sort algorithm in an in-place manner, without using any additional memory or space.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 362,
    "Topic": "Searching & Sorting",
    "Problem": "Partitioning and Sorting Arrays with Many Repeated Entries",
    "Done": false,
    "URL": "https://www.baeldung.com/java-sorting-arrays-with-repeated-entries",
    "Difficulty": "Easy",
    "Description": "Java Sorting Arrays with Repeated Entries (Baeldung): The problem involves sorting an array of elements in Java, where the elements may have repeated entries, in ascending or descending order.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 363,
    "Topic": "Stacks & Queues",
    "Problem": " Implement Stack from Scratch",
    "Done": false,
    "URL": "https://www.tutorialspoint.com/javaexamples/data_stack.htm",
    "Difficulty": "Easy",
    "Description": "Data Stack in Java (TutorialsPoint): The problem involves implementing a stack data structure in Java, which follows the Last In, First Out (LIFO) principle.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 364,
    "Topic": "Stacks & Queues",
    "Problem": " Implement Queue from Scratch",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/queue-set-1introduction-and-array-implementation/",
    "Difficulty": "Medium",
    "Description": "Queue Set: Introduction and Array Implementation (GeeksforGeeks): The problem involves understanding the basic concepts of a queue data structure, and implementing a queue using an array in Java.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 365,
    "Topic": "Stacks & Queues",
    "Problem": "Implement 2 stack in an array",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/implement-two-stacks-in-an-array/1",
    "Difficulty": "Hard",
    "Description": "Implement Two Stacks in an Array (GeeksforGeeks): The problem involves implementing two stacks in a single array, such that they can perform all the stack operations efficiently.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 366,
    "Topic": "Stacks & Queues",
    "Problem": "find the middle element of a stack",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/design-a-stack-with-find-middle-operation/",
    "Difficulty": "Easy",
    "Description": "Design a Stack with Find Middle Operation (GeeksforGeeks): The problem involves designing a stack data structure in Java that supports finding the middle element in O(1) time complexity.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 367,
    "Topic": "Stacks & Queues",
    "Problem": "Implement N stacks in an Array",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/efficiently-implement-k-stacks-single-array/",
    "Difficulty": "Easy",
    "Description": "Efficiently Implement K Stacks in a Single Array (GeeksforGeeks): The problem involves efficiently implementing 'k' stacks in a single array, such that they can perform all the stack operations efficiently.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 368,
    "Topic": "Stacks & Queues",
    "Problem": "Check the expression has valid or Balanced parenthesis or not.",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/parenthesis-checker/0",
    "Difficulty": "Easy",
    "Description": "Parenthesis Checker (GeeksforGeeks): The problem involves checking if a given expression containing different types of parentheses (e.g., '(', ')', '{', '}', '[', ']') is balanced or not. Balanced expressions have properly matched and nested parentheses.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 369,
    "Topic": "Stacks & Queues",
    "Problem": "Reverse a String using Stack",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/reverse-a-string-using-stack/1",
    "Difficulty": "Medium",
    "Description": "\"Reverse a String using Stack\" - The problem involves reversing a given string using a stack data structure.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 370,
    "Topic": "Stacks & Queues",
    "Problem": "Design a Stack that supports getMin() in O(1) time and O(1) extra space.",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/special-stack/1",
    "Difficulty": "Medium",
    "Description": "\"Special Stack\" - This problem involves implementing a stack data structure with additional functionalities, such as finding the minimum element in constant time.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 371,
    "Topic": "Stacks & Queues",
    "Problem": "Find the next Greater element",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/next-larger-element/0",
    "Difficulty": "Easy",
    "Description": "\"Next Larger Element\" - The problem requires finding the next larger element for each element in an array, if present, and -1 if not.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 372,
    "Topic": "Stacks & Queues",
    "Problem": "The celebrity ",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/the-celebrity-problem/1",
    "Difficulty": "Easy",
    "Description": "\"The Celebrity Problem\" - This problem involves finding the celebrity in a group of people, where a celebrity is known by everyone but does not know anyone.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 373,
    "Topic": "Stacks & Queues",
    "Problem": "Arithmetic Expression evaluation",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/arithmetic-expression-evalution/",
    "Difficulty": "Easy",
    "Description": "\"Arithmetic Expression Evaluation\" - The problem involves evaluating an arithmetic expression represented as a string using stack data structure.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 374,
    "Topic": "Stacks & Queues",
    "Problem": "Evaluation of Postfix expression",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/evaluation-of-postfix-expression/0",
    "Difficulty": "Medium",
    "Description": "\"Evaluation of Postfix Expression\" - This problem involves evaluating a postfix expression represented as a string using stack data structure.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 375,
    "Topic": "Stacks & Queues",
    "Problem": "Implement a method to insert an element at its bottom without using any other data structure.",
    "Done": false,
    "URL": "https://stackoverflow.com/questions/45130465/inserting-at-the-end-of-stack",
    "Difficulty": "Easy",
    "Description": "NOT FOUND",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 376,
    "Topic": "Stacks & Queues",
    "Problem": "Reverse a stack using recursion",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/reverse-a-stack-using-recursion/",
    "Difficulty": "Medium",
    "Description": "NOT FOUND",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 377,
    "Topic": "Stacks & Queues",
    "Problem": "Sort a Stack using recursion",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/sort-a-stack/1",
    "Difficulty": "Hard",
    "Description": "\"Sort a Stack\" - The problem requires sorting the elements of a stack in ascending order using additional stacks.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 378,
    "Topic": "Stacks & Queues",
    "Problem": "Merge Overlapping Intervals",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/overlapping-intervals/0",
    "Difficulty": "Medium",
    "Description": "\"Overlapping Intervals\" - This problem involves finding the maximum number of overlapping intervals in a set of intervals.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 379,
    "Topic": "Stacks & Queues",
    "Problem": "Largest rectangular Area in Histogram",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/maximum-rectangular-area-in-a-histogram/0",
    "Difficulty": "Medium",
    "Description": "\"Maximum Rectangular Area in a Histogram\" - The problem requires finding the maximum rectangular area that can be formed in a histogram, given the heights of the bars.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 380,
    "Topic": "Stacks & Queues",
    "Problem": "Length of the Longest Valid Substring",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/valid-substring0624/1",
    "Difficulty": "Easy",
    "Description": "\"Valid Substring\" - This problem involves finding the length of the longest valid substring in a given string, where a valid substring is a substring with balanced parentheses.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 381,
    "Topic": "Stacks & Queues",
    "Problem": "Expression contains redundant bracket or not",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/expression-contains-redundant-bracket-not/",
    "Difficulty": "Easy",
    "Description": "Expression Contains Redundant Brackets or Not: The problem involves checking if an expression contains redundant brackets, i.e., brackets that do not contribute to the meaning of the expression.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 382,
    "Topic": "Stacks & Queues",
    "Problem": "Implement Stack using Queue",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/stack-using-two-queues/1",
    "Difficulty": "Medium",
    "Description": "Stack using Two Queues: The problem involves implementing a stack data structure using two queues, where the stack supports push, pop, and top operations.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 383,
    "Topic": "Stacks & Queues",
    "Problem": "Implement Stack using Deque",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/implement-stack-queue-using-deque/",
    "Difficulty": "Easy",
    "Description": "Implement Stack/Queue using Deque: The problem involves implementing a stack or a queue data structure using a deque (double-ended queue), where the stack/queue supports push, pop, and top/front operations.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 384,
    "Topic": "Stacks & Queues",
    "Problem": "Stack Permutations (Check if an array is stack permutation of other)",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/stack-permutations-check-if-an-array-is-stack-permutation-of-other/",
    "Difficulty": "Hard",
    "Description": "Stack Permutations: Check if an Array is a Stack Permutation of Another: The problem involves checking if an array is a valid stack permutation of another array, i.e., if the given array can be obtained by performing a sequence of stack push and pop operations on another array.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 385,
    "Topic": "Stacks & Queues",
    "Problem": "Implement Queue using Stack  ",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/queue-using-two-stacks/1",
    "Difficulty": "Easy",
    "Description": "Queue using Two Stacks: The problem involves implementing a queue data structure using two stacks, where the queue supports enqueue, dequeue, and front operations.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 386,
    "Topic": "Stacks & Queues",
    "Problem": "Implement n queue in an array",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/efficiently-implement-k-queues-single-array/",
    "Difficulty": "Medium",
    "Description": "Efficiently Implement K Queues in a Single Array: The problem involves implementing K queues efficiently in a single array, where each queue supports enqueue and dequeue operations.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 387,
    "Topic": "Stacks & Queues",
    "Problem": "Implement a Circular queue",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/circular-queue-set-1-introduction-array-implementation/",
    "Difficulty": "Easy",
    "Description": "Circular Queue: Introduction and Array Implementation: The problem involves implementing a circular queue data structure using an array, where the circular queue supports enqueue, dequeue, and front operations.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 388,
    "Topic": "Stacks & Queues",
    "Problem": "LRU Cache Implementationa",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/lru-cache/1",
    "Difficulty": "Easy",
    "Description": "LRU Cache: The problem involves implementing a Least Recently Used (LRU) cache, which is a data structure that maintains a fixed-size cache and evicts the least recently used item when the cache is full.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 389,
    "Topic": "Stacks & Queues",
    "Problem": "Reverse a Queue using recursion",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/queue-reversal/1",
    "Difficulty": "Medium",
    "Description": "Queue Reversal: The problem involves reversing the elements of a queue using a stack.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 390,
    "Topic": "Stacks & Queues",
    "Problem": "Reverse the first “K” elements of a queue",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/reverse-first-k-elements-of-queue/1",
    "Difficulty": "Medium",
    "Description": "Reverse First K Elements of Queue: The problem involves reversing the first K elements of a queue.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 391,
    "Topic": "Stacks & Queues",
    "Problem": "Interleave the first half of the queue with second half",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/interleave-first-half-queue-second-half/",
    "Difficulty": "Medium",
    "Description": "Interleave the First Half of a Queue with the Second Half: The problem involves interleaving the first half of a queue with the second half.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 392,
    "Topic": "Stacks & Queues",
    "Problem": "Find the first circular tour that visits all Petrol Pumps",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/circular-tour/1",
    "Difficulty": "Medium",
    "Description": "Circular Tour: The problem involves finding a circular tour in a petrol pump where each petrol pump has a certain amount of petrol and distance to the next petrol pump.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 393,
    "Topic": "Stacks & Queues",
    "Problem": "Minimum time required to rot all oranges",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/rotten-oranges/0",
    "Difficulty": "Easy",
    "Description": "Rotten Oranges: The problem involves finding the time required to rot all oranges in a grid, where each orange can rot its adjacent oranges in a unit time.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 394,
    "Topic": "Stacks & Queues",
    "Problem": "Distance of nearest cell having 1 in a binary matrix",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/distance-of-nearest-cell-having-1/0",
    "Difficulty": "Hard",
    "Description": "Distance of Nearest Cell Having 1: The problem involves finding the distance of the nearest cell in a binary matrix that contains a 1 from a given cell.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 395,
    "Topic": "Stacks & Queues",
    "Problem": "First negative integer in every window of size “k”",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/first-negative-integer-in-every-window-of-size-k/0",
    "Difficulty": "Hard",
    "Description": "First Negative Integer in Every Window of Size K: The problem involves finding the first negative integer in every window of size K in an array.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 396,
    "Topic": "Stacks & Queues",
    "Problem": "Check if all levels of two trees are anagrams or not.",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/check-if-all-levels-of-two-trees-are-anagrams-or-not/",
    "Difficulty": "Easy",
    "Description": "Check if All Levels of Two Trees are Anagrams or Not: The problem involves checking if all levels of two trees are anagrams of each other.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 397,
    "Topic": "Stacks & Queues",
    "Problem": "Sum of minimum and maximum elements of all subarrays of size “k”.",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/sum-minimum-maximum-elements-subarrays-size-k/",
    "Difficulty": "Medium",
    "Description": "Sum of Minimum and Maximum Elements of All Subarrays of Size K: The problem involves finding the sum of the minimum and maximum elements of all subarrays of size K in an array.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 398,
    "Topic": "Stacks & Queues",
    "Problem": "Minimum sum of squares of character counts in a given string after removing “k” characters.",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/game-with-string/0",
    "Difficulty": "Medium",
    "Description": "Game with String: The problem involves playing a game with a string, where players can perform certain operations to modify the string and the goal is to make the string empty.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 399,
    "Topic": "Stacks & Queues",
    "Problem": "Queue based approach or first non-repeating character in a stream.",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/first-non-repeating-character-in-a-stream/0",
    "Difficulty": "Easy",
    "Description": "First Non-Repeating Character in a Stream: The problem involves finding the first non-repeating character in a stream of characters.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 400,
    "Topic": "Stacks & Queues",
    "Problem": "Next Smaller Element",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/next-smaller-element/",
    "Difficulty": "Easy",
    "Description": "Next Smaller Element: The problem involves finding the next smaller element for each element in an array.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 401,
    "Topic": "String",
    "Problem": "Reverse a String",
    "Done": false,
    "URL": "https://leetcode.com/problems/reverse-string/",
    "Difficulty": "Easy",
    "Description": "Reverse String: The problem involves reversing a string in-place.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 402,
    "Topic": "String",
    "Problem": "Check whether a String is Palindrome or not",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/palindrome-string0817/1",
    "Difficulty": "Easy",
    "Description": "Palindrome String: The problem involves checking if a given string is a palindrome or not.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 403,
    "Topic": "String",
    "Problem": "Find Duplicate characters in a string",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/print-all-the-duplicates-in-the-input-string/",
    "Difficulty": "Easy",
    "Description": "Print All the Duplicates in the Input String: The problem involves printing all the duplicates in a given input string.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 404,
    "Topic": "String",
    "Problem": "Write a Code to check whether one string is a rotation of another",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/a-program-to-check-if-strings-are-rotations-of-each-other/",
    "Difficulty": "Medium",
    "Description": "Check if Strings are Rotations of Each Other: The problem involves checking if two given strings are rotations of each other.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 405,
    "Topic": "String",
    "Problem": "Write a Program to check whether a string is a valid shuffle of two strings or not",
    "Done": false,
    "URL": "https://www.programiz.com/java-programming/examples/check-valid-shuffle-of-strings",
    "Difficulty": "Medium",
    "Description": "\"Check Valid Shuffle of Strings\": The problem involves checking if a given string is a valid shuffle of two other strings. The input consists of three strings - the two original strings and the shuffled string, and the goal is to determine if the shuffled string is a valid interleaving of the two original strings, maintaining their relative order of characters.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 406,
    "Topic": "String",
    "Problem": "Count and Say problem",
    "Done": false,
    "URL": "https://leetcode.com/problems/count-and-say/",
    "Difficulty": "Medium",
    "Description": "\"Count and Say\": The problem requires implementing the \"Count and Say\" sequence, where a given integer n represents the nth term of the sequence. The sequence starts with \"1\" and each subsequent term is generated by counting the consecutive occurrences of each digit in the previous term and appending the count followed by the digit. The task is to generate the nth term of the \"Count and Say\" sequence.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 407,
    "Topic": "String",
    "Problem": "Write a program to find the longest Palindrome in a string.[ Longest palindromic Substring]",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/longest-palindrome-in-a-string/0",
    "Difficulty": "Medium",
    "Description": "\"Longest Palindrome in a String\": The problem involves finding the longest palindrome substring in a given string. A palindrome is a string that reads the same forwards and backwards. The input is a string, and the goal is to find the longest contiguous substring that is a palindrome.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 408,
    "Topic": "String",
    "Problem": "Find Longest Recurring Subsequence in String",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/longest-repeating-subsequence/0",
    "Difficulty": "Medium",
    "Description": "\"Longest Repeating Subsequence\": The problem requires finding the length of the longest repeating subsequence in a given string. A subsequence is a sequence of characters that appears in the same order in the original string but not necessarily consecutively. The task is to find the length of the longest subsequence that appears more than once in the input string.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 409,
    "Topic": "String",
    "Problem": "Print all Subsequences of a string.",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/print-subsequences-string/",
    "Difficulty": "Medium",
    "Description": "\"Print Subsequences of a String\": The problem involves generating all possible subsequences of a given string. A subsequence is a sequence of characters that can be obtained by deleting zero or more characters from the original string without changing the relative order of characters. The goal is to print all the possible subsequences of the input string.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 410,
    "Topic": "String",
    "Problem": "Print all the permutations of the given string",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/permutations-of-a-given-string/0",
    "Difficulty": "Medium",
    "Description": "\"Permutations of a Given String\": The problem requires generating all possible permutations of a given string. A permutation is an arrangement of characters in a specific order. The task is to generate all the permutations of the input string.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 411,
    "Topic": "String",
    "Problem": "Split the Binary string into two substring with equal 0’s and 1’s",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/split-the-binary-string-into-substrings-with-equal-number-of-0s-and-1s/",
    "Difficulty": "Hard",
    "Description": "\"Split the Binary String into Substrings with Equal Number of 0s and 1s\": The problem involves splitting a binary string into substrings such that each substring has an equal number of 0s and 1s. The input is a binary string, and the goal is to find the number of ways to split the string into substrings with equal number of 0s and 1s, and return the count.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 412,
    "Topic": "String",
    "Problem": "Word Wrap",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/word-wrap/0",
    "Difficulty": "Hard",
    "Description": "\"Word Wrap\": The problem involves formatting a given list of words into lines of fixed width, where words are separated by a single space. The task is to minimize the total cost of line breaks, where the cost of a line is the square of the number of extra spaces at the end of the line. The goal is to format the words into lines with the minimum total cost.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 413,
    "Topic": "String",
    "Problem": "EDIT Distance [Very Imp]",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/edit-distance3702/1",
    "Difficulty": "Medium",
    "Description": "\"Edit Distance\": The problem involves finding the minimum number of operations required to convert one string into another, where the allowed operations are insertion, deletion, and substitution of a single character. The input consists of two strings, and the goal is to find the minimum number of operations required to transform one string into the other.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 414,
    "Topic": "String",
    "Problem": "Find next greater number with same set of digits. [Very Very IMP]",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/next-permutation/0",
    "Difficulty": "Medium",
    "Description": "\"Next Permutation\": The problem involves finding the lexicographically next permutation of a given sequence of numbers. The input is an array of integers, and the goal is to modify the array in-place to obtain the next permutation in lexicographical order.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 415,
    "Topic": "String",
    "Problem": "Balanced Parenthesis problem.[Imp]",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/parenthesis-checker/0",
    "Difficulty": "Easy",
    "Description": "\"Parenthesis Checker\": The problem involves checking if a given expression containing parentheses is balanced, i.e., if every opening parenthesis has a corresponding closing parenthesis and they are properly nested. The input is a string containing parentheses, and the goal is to determine if the given expression is balanced.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 416,
    "Topic": "String",
    "Problem": "Word break",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/word-break/0",
    "Difficulty": "Medium",
    "Description": "Word Break: This problem involves determining whether a given string can be segmented into words from a dictionary of known words. The task is to find if the given string can be broken down into a combination of words from the dictionary.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 417,
    "Topic": "String",
    "Problem": "Rabin Karp Algo",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/rabin-karp-algorithm-for-pattern-searching/",
    "Difficulty": "Medium",
    "Description": "Rabin-Karp Algorithm for Pattern Searching: This problem involves finding the occurrences of a given pattern string within a larger text string using the Rabin-Karp algorithm, which is a string searching algorithm that uses hashing.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 418,
    "Topic": "String",
    "Problem": "KMP Algo",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/longest-prefix-suffix2527/1",
    "Difficulty": "Medium",
    "Description": "Longest Prefix Suffix: This problem involves finding the length of the longest proper prefix of a given string that is also a suffix of the same string. The task is to find the length of the longest common prefix and suffix of the string.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 419,
    "Topic": "String",
    "Problem": "Convert a Sentence into its equivalent mobile numeric keypad sequence.",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/convert-sentence-equivalent-mobile-numeric-keypad-sequence/",
    "Difficulty": "Easy",
    "Description": "Convert Sentence Equivalent Mobile Numeric Keypad Sequence: This problem involves converting a given sentence into its equivalent mobile numeric keypad sequence. Each character in the sentence is converted into its corresponding digit on a mobile keypad, and the digits are concatenated to form the resulting sequence.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 420,
    "Topic": "String",
    "Problem": "Minimum number of bracket reversals needed to make an expression balanced.",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/count-the-reversals/0",
    "Difficulty": "Medium",
    "Description": "Count the Reversals: This problem involves finding the minimum number of reversals required to balance a given string of brackets. The task is to find the minimum number of bracket reversals needed to make the given string balanced.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 421,
    "Topic": "String",
    "Problem": "Count All Palindromic Subsequence in a given String.",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/count-palindromic-subsequences/1",
    "Difficulty": "Medium",
    "Description": "Count Palindromic Subsequences: This problem involves finding the count of palindromic subsequence in a given string. A palindromic subsequence is a subsequence of a string that reads the same backward as forward.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 422,
    "Topic": "String",
    "Problem": "Count of number of given string in 2D character array",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/find-count-number-given-string-present-2d-character-array/",
    "Difficulty": "Medium",
    "Description": "Find Count of Number in a Given String present in 2D Character Array: This problem involves finding the count of a given string in a 2D character array. The task is to count the number of occurrences of the given string in the rows, columns, and diagonals of the 2D array.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 423,
    "Topic": "String",
    "Problem": "Search a Word in a 2D Grid of characters.",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/find-the-string-in-grid/0",
    "Difficulty": "Medium",
    "Description": "Find the String in Grid: This problem involves finding a given string in a grid of characters. The task is to determine if the given string can be formed by traversing adjacent cells in the grid, horizontally or vertically.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 424,
    "Topic": "String",
    "Problem": "Boyer Moore Algorithm for Pattern Searching.",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/boyer-moore-algorithm-for-pattern-searching/",
    "Difficulty": "Hard",
    "Description": "Boyer-Moore Algorithm for Pattern Searching: This problem involves finding the occurrences of a given pattern string within a larger text string using the Boyer-Moore algorithm, which is a string searching algorithm that works by comparing and skipping characters based on a preprocessed pattern.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 425,
    "Topic": "String",
    "Problem": "Converting Roman Numerals to Decimal",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/roman-number-to-integer/0",
    "Difficulty": "Easy",
    "Description": "Roman Number to Integer: This problem involves converting a given Roman numeral string to its equivalent integer value. The task is to convert the given Roman numeral string to an integer according to the Roman numeral system.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 426,
    "Topic": "String",
    "Problem": "Longest Common Prefix",
    "Done": false,
    "URL": "https://leetcode.com/problems/longest-common-prefix/",
    "Difficulty": "Easy",
    "Description": "Longest Common Prefix: This problem involves finding the longest common prefix among a given array of strings. The task is to find the longest common prefix of the strings in the array.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 427,
    "Topic": "String",
    "Problem": "Number of flips to make binary string alternate",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/min-number-of-flips/0",
    "Difficulty": "Easy",
    "Description": "Min Number of Flips: This problem involves finding the minimum number of flips required to make a binary string alternate. The task is to find the minimum number of flips needed to make the binary string alternate, i.e., have alternate 0s and 1s.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 428,
    "Topic": "String",
    "Problem": "Find the first repeated word in string.",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/second-most-repeated-string-in-a-sequence/0",
    "Difficulty": "Easy",
    "Description": "Second Most Repeated String in a Sequence: This problem involves finding the second most repeated string in a given sequence of strings. The task is to find the second most repeated string in the given sequence of strings.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 429,
    "Topic": "String",
    "Problem": "Minimum number of swaps for bracket balancing.",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/minimum-swaps-for-bracket-balancing/0",
    "Difficulty": "Easy",
    "Description": "Minimum Swaps for Bracket Balancing: This problem involves finding the minimum number of swaps required to balance a given string of brackets. The task is to find the minimum number of swaps needed to make the given string balanced.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 430,
    "Topic": "String",
    "Problem": "Find the longest common subsequence between two strings.",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/longest-common-subsequence/0",
    "Difficulty": "Medium",
    "Description": "Longest Common Subsequence: This problem involves finding the longest common subsequence of two given strings. The task is to find the longest subsequence that is common to both the given strings.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 431,
    "Topic": "String",
    "Problem": "Program to generate all possible valid IP addresses from given  string.",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/program-generate-possible-valid-ip-addresses-given-string/",
    "Difficulty": "Easy",
    "Description": "Program to Generate Possible Valid IP Addresses from a Given String: This problem involves generating all possible valid IP addresses from a given string containing only digits. The task is to generate all possible valid IP",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 432,
    "Topic": "String",
    "Problem": "Write a program tofind the smallest window that contains all characters of string itself.",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/smallest-distant-window/0",
    "Difficulty": "Medium",
    "Description": "Smallest Distant Window: Given two strings, find the smallest window in the first string that contains all the characters from the second string.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 433,
    "Topic": "String",
    "Problem": "Rearrange characters in a string such that no two adjacent are same",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/rearrange-characters/0",
    "Difficulty": "Medium",
    "Description": "Rearrange Characters: Given a string, rearrange its characters in such a way that no two adjacent characters are the same.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 434,
    "Topic": "String",
    "Problem": "Minimum characters to be added at front to make string palindrome",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/minimum-characters-added-front-make-string-palindrome/",
    "Difficulty": "Hard",
    "Description": "Minimum Characters Added to Make String Palindrome: Given a string, find the minimum number of characters that need to be added to the front of the string to make it a palindrome.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 435,
    "Topic": "String",
    "Problem": "Given a sequence of words, print all anagrams together",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/k-anagrams-1/0",
    "Difficulty": "Medium",
    "Description": "K-Anagrams: Given an array of strings, group the anagrams together and return them in any order.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 436,
    "Topic": "String",
    "Problem": "Find the smallest window in a string containing all characters of another string",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/smallest-window-in-a-string-containing-all-the-characters-of-another-string/0",
    "Difficulty": "Hard",
    "Description": "Smallest Window in a String Containing All Characters of Another String: Given two strings, find the smallest window in the first string that contains all the characters from the second string.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 437,
    "Topic": "String",
    "Problem": "Recursively remove all adjacent duplicates",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/consecutive-elements/0",
    "Difficulty": "Easy",
    "Description": "Consecutive Elements: Given an array of integers, find the length of the longest subarray in which the elements appear consecutively in increasing order.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 438,
    "Topic": "String",
    "Problem": "String matching where one string contains wildcard characters",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/wildcard-string-matching/0",
    "Difficulty": "Hard",
    "Description": "Wildcard String Matching: Given a pattern with wildcard characters '?' and '*', and a string, check if the string matches the pattern.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 439,
    "Topic": "String",
    "Problem": "Function to find Number of customers who could not get a computer",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/function-to-find-number-of-customers-who-could-not-get-a-computer/",
    "Difficulty": "Medium",
    "Description": "Function to Find Number of Customers Who Could Not Get a Computer: Given a list of arrival and departure times of customers at a computer center, find the number of customers who could not get a computer.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 440,
    "Topic": "String",
    "Problem": "Transform One String to Another using Minimum Number of Given Operation",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/transform-one-string-to-another-using-minimum-number-of-given-operation/",
    "Difficulty": "Medium",
    "Description": "Transform One String to Another Using Minimum Number of Given Operations: Given two strings and a set of allowed operations, find the minimum number of operations required to transform one string into another.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 441,
    "Topic": "String",
    "Problem": "Check if two given strings are isomorphic to each other",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/isomorphic-strings/0",
    "Difficulty": "Easy",
    "Description": "Isomorphic Strings: Given two strings, determine if they are isomorphic, i.e., they can be mapped to each other one-to-one.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 442,
    "Topic": "String",
    "Problem": "Recursively print all sentences that can be formed from list of word lists",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/recursively-print-all-sentences-that-can-be-formed-from-list-of-word-lists/",
    "Difficulty": "Medium",
    "Description": "Recursively Print All Sentences That Can Be Formed From List of Word Lists: Given a list of word lists, recursively print all possible sentences that can be formed by selecting one word from each list.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 443,
    "Topic": "Trie",
    "Problem": "Construct a trie from scratch",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/trie-insert-and-search/",
    "Difficulty": "Medium",
    "Description": "Trie Insert and Search: Implement insertion and search operations in a Trie data structure.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 444,
    "Topic": "Trie",
    "Problem": "Find shortest unique prefix for every word in a given list",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/find-all-shortest-unique-prefixes-to-represent-each-word-in-a-given-list/",
    "Difficulty": "Hard",
    "Description": "Find All Shortest Unique Prefixes to Represent Each Word in a Given List: Given a list of words, find the shortest unique prefixes that represent each word.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 445,
    "Topic": "Trie",
    "Problem": "Word Break  | (Trie solution)",
    "Done": false,
    "URL": "https://www.geeksforgeeks.org/word-break-problem-trie-solution/",
    "Difficulty": "Hard",
    "Description": "Word Break Problem (Trie Solution): Given a dictionary of words and a string, determine if the string can be segmented into a space-separated sequence of words from the dictionary, using a Trie data structure.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 446,
    "Topic": "Trie",
    "Problem": "Given a sequence of words, print all anagrams together",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/k-anagrams-1/0",
    "Difficulty": "Medium",
    "Description": "K-Anagrams: Given an array of strings, group the anagrams together and return them in any order.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 447,
    "Topic": "Trie",
    "Problem": "Implement a Phone Directory",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/phone-directory/0",
    "Difficulty": "Hard",
    "Description": "Phone Directory: Implement a phone directory with functionalities like add, search, and delete.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  },
  {
    "id": 448,
    "Topic": "Trie",
    "Problem": "Print unique rows in a given boolean matrix",
    "Done": false,
    "URL": "https://practice.geeksforgeeks.org/problems/unique-rows-in-boolean-matrix/1",
    "Difficulty": "Easy",
    "Description": "Unique Rows in Boolean Matrix: Given a boolean matrix, find the unique rows in it.",
    "Link": "https://www.youtube.com/embed/bhPEMkeI5sk"
  }
]
